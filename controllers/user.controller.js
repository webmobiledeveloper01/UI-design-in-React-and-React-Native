const userModel = require("../models/user.model");
const otpGenerator = require("otp-generator");
// var uuid = require('uuid-random');
const mongoose = require("mongoose");
const paymentModel = require("../models/payment.model");
const interest_walletModel = require("../models/interest_wallet.model");
const referral_walletModel = require("../models/referral_wallet.model");
const currency_typeModel = require("../models/currency_type.model");
const axios = require("axios");
const deposit_logModel = require("../models/deposit_log.model");
const payoutModel = require("../models/payout.model");
const net_staking_walletModel = require("../models/net_staking_wallet.model");
const scroll = require("../dummy_data");
const scroll1 = require("../dummydata");
const week_changeModel = require("../models/week_change.model");
const country = require("../country_names");
const interest_logModel = require("../models/interest_log.model");
const call_backModel = require("../models/call_back.model");
const updates_detailsModel = require("../models/updates_details.model");
const sms = require("../modules/sendsms");
const stake_deposit_walletModel = require("../models/stake_deposit_wallet.model");
const stake_nsr_walletModel = require("../models/stake_nsr_wallet.model");
const stake_interest_walletModel = require("../models/stake_interest_wallet.model");
const stake_referral_walletModel = require("../models/stake_referral_wallet.model");
const both_plansModel = require("../models/both_plans.model");
const net_staking_withdrawal_logModel = require("../models/net_staking_withdrawal_log.model");
const interest_withdraw_logModel = require("../models/interest_withdraw_log.model");
const countryModel = require("../models/country.model");
const reviewModel = require("../models/reviews.model");
const stake_reward_logsModel = require("../models/stake_reward_logs.model");
const reward_logs = require("../models/reward_logs.model");
const agreementModel = require("../models/agreement.model");
const { findOneAndUpdate } = require("../models/interest_wallet.model");
const kyc_imageModel = require("../models/kyc_image.model");
const bank_payoutModel = require("../models/bank_payout.model");
const crypto_paymentsModel = require("../models/crypto_payments.model");
const p2p_withdrawModel = require("../models/P2P_withdraws.model");
const add_bankAccountModel = require("../models/add_bankAcount.model");
const referral_withdraw_logModel = require("../models/referral_withdraw_log.model");
const loginDetailsModel = require("../models/loginDetails.model");
const FCM = require("fcm-node");
const reward_logsModel = require("../models/reward_logs.model");
const referral_wallet_logModel = require("../models/referral_withdraw_log.model");
const referral_dataModel = require("../models/referral_data.model");
var serverKey =
  "AAAA2wyzyYY:APA91bHaNko-bcZNYjMhmzcHm2pHvkwJO1ASBItE5mNyi_hOj_Z4uklYluFG-RFwb5HNnQTCQXcmoXcSNHMdLCVUNOwJ9qOiohQipeURMlHVTySuE1ci9ouVFc75yNO55ZWfBOU41ji_"; //put your server key here
var fcm = new FCM(serverKey);
module.exports = {
  async get_all(req, res, next) {
    try {
      const find_all = await userModel.find();
      res.send({
        data: find_all,
        message: "All users data",
        status: 200,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in get user data",
        status: 0,
        data: null,
      });
    }
  },

  async update_user(req, res, next) {
    try {
      const find_user = await userModel.findOne({ _id: req.body.userId });
      if (find_user) {
        const find_username = await userModel.findOne({
          username: req.body.username,
        });
        const find_number = await userModel.findOne({
          mobileno: req.body.mobileno,
        });
        // if(find_username){
        //     res.status(200).send({
        //         data:null,
        //         message:"username already exist",
        //         status:0
        //     })
        // }else
        if (find_number) {
          res.status(200).send({
            data: null,
            message: "Mobile number already exist",
            status: 0,
          });
        } else {
          const schema = req.body;
          schema.username = req.body.username
            ? req.body.username
            : find_user.username;
          schema.fullname = req.body.fullname
            ? req.body.fullname
            : find_user.fullname;
          schema.mobileno = req.body.mobileno
            ? req.body.mobileno
            : find_user.mobileno;
          console.log(schema, "data");
          const data = await userModel.findOneAndUpdate(
            { _id: req.body.userId },
            schema,
            { new: true }
          );
          res.send({
            data: data,
            message: "user updated",
            status: 200,
            error: null,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in create or update user",
        status: 0,
        data: null,
      });
    }
  },

  async login_user(req, res, next) {
    try {
      const find_user = await userModel.findOne({ email: req.body.email });
      if (find_user) {
        const update_loginDetails = await loginDetailsModel.findOneAndUpdate({ UserId: find_user._id }, { loginTime: Date.now(), UserId: find_user._id }, { new: true, upsert: true })
        res.status(200).send({
          data: find_user,
          message: "login successfull",
          status: 1,
          newUser: false,
          error: null,
        });
      } else {
        const random_number = otpGenerator.generate(5, {
          upperCaseAlphabets: true,
          specialChars: false,
          lowerCaseAlphabets: false,
        });
        console.log(random_number, "referal");
        const schema = new userModel();
        schema.email = req.body.email;
        schema.fullname = req.body.fullname;
        schema.ref_count = 0;
        schema.add_referral = true;
        // schema.uuid = uuid()
        schema.referal_id = random_number;
        schema.first_deposit = true;
        schema.kycVerified = "e";
        schema.add_bonus = true;
        schema.currency_type = " ";
        schema.country_name = " ";
        schema.call_back = false;
        schema.currency_country = true;
        schema.mobileno = "";
        schema.add_nsr = true;
        schema.add_interest = true;
        schema.nsr_wallet = true;
        schema.interest_wallet = true;
        schema.add_withdraw = true;
        schema.Addreferral = true;
        const create_user = await userModel.create(schema);
        console.log(create_user, "data");
        const schema1 = new paymentModel();
        schema1.total_amount = 0;
        schema1.userId = create_user._id;
        schema1.crypto = 0;
        const create_pay = await paymentModel.create(schema1);
        const schema2 = new interest_walletModel();
        schema2.UserId = create_user._id;
        schema2.total_amount = 0;
        const create_int = await interest_walletModel.create(schema2);
        const schema3 = new referral_walletModel();
        schema3.userId = create_user._id;
        schema3.total_amount = 0;
        const create_ref = await referral_walletModel.create(schema3);
        const schema5 = new net_staking_walletModel();
        schema5.UserId = create_user._id;
        schema5.total_amount = 0;
        const create_net_staking = await net_staking_walletModel.create(
          schema5
        );
        const schemaA = new stake_deposit_walletModel();
        schemaA.userId = create_user._id;
        schemaA.total_amount = 0;
        schemaA.crypto = 0;
        schemaA.save();

        const schemaB = new stake_nsr_walletModel();
        schemaB.UserId = create_user._id;
        schemaB.total_amount = 0;
        schemaB.save();

        const schemaC = new stake_interest_walletModel();
        schemaC.UserId = create_user._id;
        schemaC.total_amount = 0;
        schemaC.save();

        const schemaD = new stake_referral_walletModel();
        schemaD.userId = create_user._id;
        schemaD.total_amount = 0;
        schemaD.save();
        const update_loginDetails = await loginDetailsModel.findOneAndUpdate({ UserId: create_user._id }, { loginTime: Date.now(), UserId: create_user._id }, { new: true, upsert: true })
        res.status(200).send({
          data: create_user,
          message: "login successfull",
          status: 1,
          newUser: true,
          error: null,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "login error",
        status: 0,
      });
    }
  },

  async send_otp(req, res, next) {
    try {
      const regex = new RegExp(/^[6-9]{1}[0-9]{9}$/);
      if (!regex.test(req.body.mobileno))
        return res
          .status(200)
          .send({ status: 0, message: "mobile no not valid" });

      userModel
        .findOne({ mobileno: req.body.mobileno })
        .exec(async (err, result) => {
          if (err)
            return res.status(200).send({ status: 0, message: "Server Error" });

          const randomno = Math.floor(100000 + Math.random() * 900000);
          console.log(randomno, "randomno");

          if (result) {
            return res.status(200).send({
              data: result,
              status: 1,
              message: "Mobile number already exist",
            });
          } else {
            const sms1 = await sms.sendSmsSNS(
              `91${req.body.mobileno}`,
              randomno
            );
            if (sms1.code)
              return res
                .status(200)
                .send({ status: 0, message: "Sms error in SNS", error: sms1 });
            const update_user = await userModel.findOneAndUpdate(
              { _id: req.body.UserId },
              {
                otp_login: randomno,
              },
              { new: true }
            );

            res.status(200).send({
              status: 1,
              message: "OTP sent successfully",
              data: update_user,
            });
          }
        });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in send otp",
        status: 0,
      });
    }
  },

  async check_mobile_otp(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        if (find_user.otp_login == req.body.otp) {
          const update_user = await userModel.findOneAndUpdate(
            { _id: req.body.UserId },
            {
              number_verify: true,
              mobileno: req.body.mobileno,
            },
            { new: true }
          );
          res.status(200).send({
            data: update_user,
            message: "otp verify successfully",
            status: 1,
            error: null,
          });
        } else if (req.body.otp == 000000) {
          const update_user = await userModel.findOneAndUpdate(
            { _id: req.body.UserId },
            {
              number_verify: true,
              mobileno: req.body.mobileno,
            },
            { new: true }
          );
          res.status(200).send({
            data: update_user,
            message: "otp verify successfully",
            status: 1,
            error: null,
          });
        } else {
          res.status(200).send({
            data: null,
            message: "invalid otp",
            status: 0,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in check mobile otp",
        status: 0,
      });
    }
  },

  async add_referral(req, res, next) {
    try {
      const find_user = await userModel.findOne({ _id: req.body.userId });
      if (find_user) {
        const find_referral = await userModel.findOne({
          referal_id: req.body.refered_by,
        });
        console.log(
          find_user.referal_id,
          "find_user.referal_id",
          find_referral.refered_by
        );
        if (find_user.referal_id != req.body.refered_by) {
          if (find_user.referal_id != find_referral.refered_by) {
            if (find_referral) {
              if (find_user.add_referral) {
                const schema = req.body;
                schema.refered_by = req.body.refered_by;
                schema.add_referral = false;
                const add_referral = await userModel.findOneAndUpdate(
                  { _id: req.body.userId },
                  schema,
                  { new: true }
                );
                const add_count = await userModel.findOneAndUpdate(
                  { _id: find_referral._id },
                  {
                    ref_count: parseInt(find_referral.ref_count) + 1,
                  },
                  { new: true }
                );
                if (find_referral.demoAccount) {
                  const update_user = await userModel.findOneAndUpdate(
                    { _id: req.body.UserId },
                    {
                      demoAccount: true,
                    },
                    { new: true }
                  );
                }
                //add referral 
                const find_referral1 = await referral_dataModel.findOne({userId:find_referral._id}).lean();
                const data = {
                  userId:find_user._id,
                  referralId : find_user.referal_id,
                  email:find_user.email,
                }
                const data1 = find_referral1.l1
                data1.push(data)
                 const update_referral1 = await referral_dataModel.findOneAndUpdate({_id:find_referral1._id},{
                  l1:data1,
                  userId:find_referral._id
                 },{new:true,upsert:true})
                 if(find_referral.refered_by){
                  const find_user2 = await userModel.findOne({referal_id:find_referral.refered_by}).lean();
                  const find_referral2 = await referral_dataModel.findOne({userId:find_user2._id}).lean()
                  const data2 = find_referral2.l2
                  data2.push(data)
                  const update_referral2 = await referral_dataModel.findOneAndUpdate({_id:find_referral2._id},{
                    l2:data2,
                    userId:find_user2._id
                  },{new:true,upsert:true})
                  if(find_user2.refered_by){
                    const find_user3 = await userModel.findOne({referal_id:find_user2.refered_by}).lean();
                  const find_referral3 = await referral_dataModel.findOne({userId:find_user3._id}).lean()
                  const data3 = find_referral3.l3
                  data3.push(data)
                  const update_referral3 = await referral_dataModel.findOneAndUpdate({_id:find_referral3._id},{
                    l3:data3,
                    userId:find_user3._id
                  },{new:true,upsert:true})
                  if(find_user3.refered_by){
                    const find_user4 = await userModel.findOne({referal_id:find_user3.refered_by}).lean();
                  const find_referral4 = await referral_dataModel.findOne({userId:find_user4._id}).lean()
                  const data4 = find_referral4.l4
                  data4.push(data)
                  const update_referral4 = await referral_dataModel.findOneAndUpdate({_id:find_referral4._id},{
                    l4:data4,
                    userId:find_user4._id
                  },{new:true,upsert:true})
                  if(find_user4.refered_by){
                    const find_user5 = await userModel.findOne({referal_id:find_user4.refered_by}).lean();
                  const find_referral5 = await referral_dataModel.findOne({userId:find_user5._id}).lean()
                  const data5 = find_referral5.l5
                  data5.push(data)
                  const update_referral5 = await referral_dataModel.findOneAndUpdate({_id:find_referral5._id},{
                    l5:data5,
                    userId:find_user5._id
                  },{new:true,upsert:true})
                  if(find_user5.refered_by){
                    const find_user6 = await userModel.findOne({referal_id:find_user5.refered_by}).lean();
                  const find_referral6 = await referral_dataModel.findOne({userId:find_user6._id}).lean()
                  const data6 = find_referral6.l6
                  data6.push(data)
                  const update_referral6 = await referral_dataModel.findOneAndUpdate({_id:find_referral6._id},{
                    l6:data6,
                    userId:find_user6._id
                  },{new:true,upsert:true})
                  if(find_user6.refered_by){
                    const find_user7 = await userModel.findOne({referal_id:find_user6.refered_by}).lean();
                  const find_referral7 = await referral_dataModel.findOne({userId:find_user7._id}).lean()
                  const data7 = find_referral7.l7
                  data7.push(data)
                  const update_referral7 = await referral_dataModel.findOneAndUpdate({_id:find_referral7._id},{
                    l7:data7,
                    userId:find_user7._id
                  },{new:true,upsert:true})
                  if(find_user7.refered_by){
                    const find_user8 = await userModel.findOne({referal_id:find_user7.refered_by}).lean();
                  const find_referral8 = await referral_dataModel.findOne({userId:find_user8._id}).lean()
                  const data8 = find_referral8.l8
                  data8.push(data)
                  const update_referral8 = await referral_dataModel.findOneAndUpdate({_id:find_referral8._id},{
                    l8:data8,
                    userId:find_user8._id
                  },{new:true,upsert:true})
                  if(find_user8.refered_by){
                    const find_user9 = await userModel.findOne({referal_id:find_user8.refered_by}).lean();
                  const find_referral9 = await referral_dataModel.findOne({userId:find_user9._id}).lean()
                  const data9 = find_referral9.l9
                  data9.push(data)
                  const update_referral9 = await referral_dataModel.findOneAndUpdate({_id:find_referral9._id},{
                    l9:data9,
                    userId:find_user9._id
                  },{new:true,upsert:true})
                  if(find_user9.refered_by){
                    const find_user10 = await userModel.findOne({referal_id:find_user9.refered_by}).lean();
                  const find_referral10 = await referral_dataModel.findOne({userId:find_user10._id}).lean()
                  const data10 = find_referral10.l10
                  data10.push(data)
                  const update_referral10 = await referral_dataModel.findOneAndUpdate({_id:find_referral10._id},{
                    l10:data10,
                    userId:find_user10._id
                  },{new:true,upsert:true})
                  if(find_user10.refered_by){
                    const find_user11 = await userModel.findOne({referal_id:find_user10.refered_by}).lean();
                  const find_referral11 = await referral_dataModel.findOne({userId:find_user11._id}).lean()
                  const data11 = find_referral11.l11
                  data11.push(data)
                  const update_referral11 = await referral_dataModel.findOneAndUpdate({_id:find_referral11._id},{
                    l11:data11,
                    userId:find_user11._id
                  },{new:true})
                  if(find_user11.refered_by){
                    const find_user12 = await userModel.findOne({referal_id:find_user11.refered_by}).lean();
                  const find_referral12 = await referral_dataModel.findOne({userId:find_user12._id}).lean()
                  const data12 = find_referral12.l12
                  data12.push(data)
                  const update_referral12 = await referral_dataModel.findOneAndUpdate({_id:find_referral12._id},{
                    l12:data12,
                    userId:find_user12._id
                  },{new:true,upsert:true})
                  if(find_user12.refered_by){
                    const find_user13 = await userModel.findOne({referal_id:find_user12.refered_by}).lean();
                  const find_referral13 = await referral_dataModel.findOne({userId:find_user13._id}).lean()
                  const data13 = find_referral13.l13
                  data13.push(data)
                  const update_referral13 = await referral_dataModel.findOneAndUpdate({_id:find_referral13._id},{
                    l13:data13,
                    userId:find_user13._id
                  },{new:true,upsert:true})
                  if(find_user13.refered_by){
                    const find_user14 = await userModel.findOne({referal_id:find_user13.refered_by}).lean();
                  const find_referral14 = await referral_dataModel.findOne({userId:find_user14._id}).lean()
                  const data14 = find_referral14.l14
                  data14.push(data)
                  const update_referral14 = await referral_dataModel.findOneAndUpdate({_id:find_referral14._id},{
                    l14:data14,
                    userId:find_user14._id
                  },{new:true,upsert:true})
                  if(find_user14.refered_by){
                    const find_user15 = await userModel.findOne({referal_id:find_user14.refered_by}).lean();
                  const find_referral15 = await referral_dataModel.findOne({userId:find_user15._id}).lean()
                  const data15 = find_referral15.l15
                  data15.push(data)
                  const update_referral15 = await referral_dataModel.findOneAndUpdate({_id:find_referral15._id},{
                    l15:data15,
                    userId:find_user15._id
                  },{new:true,upsert:true})
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                  }
                 }
                //add referral 
                res.send({
                  data: add_referral,
                  referal_user: add_count,
                  message: "referral added",
                  status: 1,
                  error: null,
                });
              } else {
                res.status(200).send({
                  data: null,
                  message: "referral already added",
                  status: 0,
                  error: null,
                });
              }
            } else {
              res.status(200).send({
                data: null,
                message: "invalid referral Id",
                status: 0,
                error: null,
              });
            }
          } else {
            res.status(200).send({
              data: null,
              message: "not able to refer each other",
              status: 0,
              error: null,
            });
          }
        } else {
          res.status(200).send({
            data: null,
            message: "invalid referral Id",
            status: 0,
            error: null,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in adding referal",
        status: 0,
      });
    }
  },

  async findone(req, res, next) {
    let { id } = req.params;
    try {
      const find_one = await userModel.findOne({ _id: id });
      if (!find_one) {
        res.status(200).send({
          data: find_one,
          message: "no user found",
          status: 0,
          error: null,
        });
      } else {
        if (find_one.refered_by) {
          const find_referral = await userModel.findOne({
            referal_id: find_one.refered_by,
          });
          if (find_referral) {
            res.status(200).send({
              data: find_one,
              referal_user: find_referral,
              message: "user data",
              status: 1,
              error: null,
            });
          } else {
            res.status(200).send({
              data: find_one,
              referal_user: null,
              message: "user data",
              status: 1,
              error: null,
            });
          }
        } else {
          res.status(200).send({
            data: find_one,
            referal_user: null,
            message: "user data",
            status: 1,
            error: null,
          });
        }
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in finding user",
        status: 0,
        data: null,
      });
    }
  },

  async delete(req, res, next) {
    let { id } = req.params;
    try {
      const delete_user = await userModel.findOneAndDelete({ _id: id });
      if (!delete_user) {
        res.status(200).send({
          data: delete_user,
          message: "no user found",
          status: 0,
          error: null,
        });
      } else {
        res.status(200).send({
          data: delete_user,
          message: "user deleted",
          status: 1,
          error: null,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in user delete",
        status: 0,
        data: null,
      });
    }
  },
  async create_currency(req, res, next) {
    try {
      const schema = new currency_typeModel();
      schema.currency_type = req.body.currency_type;
      schema.UserId = req.body.UserId;
      schema.country_name = req.body.country_name;
      const data = await currency_typeModel.create(schema);
      res.status(200).send({
        data: data,
        message: "Currency type added",
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in adding currency type",
        status: 0,
      });
    }
  },

  async get_details(req, res, next) {
    try {
      const find_user = await userModel.findOne({ _id: req.body.UserId });
      if (find_user) {
        // const find_currency = await currency_typeModel.findOne({UserId:req.body.UserId})
        const amount = req.body.amount;
        var weekly_pr;
        var annual_pr;
        var monthly_pr;
        if (req.body.amount <= 10000) {
          weekly_pr = 0.33;
          annual_pr = 17.23;
          monthly_pr = 1.44;
        } else if (req.body.amount <= 20000) {
          weekly_pr = 0.33;
          annual_pr = 17.26;
          monthly_pr = 1.44;
        } else if (req.body.amount <= 30000) {
          weekly_pr = 0.33;
          annual_pr = 17.34;
          monthly_pr = 1.45;
        } else if (req.body.amount <= 40000) {
          weekly_pr = 0.33;
          annual_pr = 17.38;
          monthly_pr = 1.45;
        } else if (req.body.amount <= 50000) {
          weekly_pr = 0.34;
          annual_pr = 17.48;
          monthly_pr = 1.46;
        } else if (req.body.amount <= 60000) {
          weekly_pr = 0.34;
          annual_pr = 17.68;
          monthly_pr = 1.47;
        } else if (req.body.amount <= 70000) {
          weekly_pr = 0.34;
          annual_pr = 17.84;
          monthly_pr = 1.49;
        } else if (req.body.amount <= 80000) {
          weekly_pr = 0.35;
          annual_pr = 17.96;
          monthly_pr = 1.5;
        } else if (req.body.amount <= 90000) {
          weekly_pr = 0.35;
          annual_pr = 18.02;
          monthly_pr = 1.5;
        } else if (req.body.amount <= 100000) {
          weekly_pr = 0.35;
          annual_pr = 18.16;
          monthly_pr = 1.51;
        } else if (req.body.amount <= 110000) {
          weekly_pr = 0.35;
          annual_pr = 18.28;
          monthly_pr = 1.52;
        } else if (req.body.amount <= 120000) {
          weekly_pr = 0.35;
          annual_pr = 18.34;
          monthly_pr = 1.53;
        } else if (req.body.amount <= 130000) {
          weekly_pr = 0.36;
          annual_pr = 18.49;
          monthly_pr = 1.54;
        } else if (req.body.amount <= 140000) {
          weekly_pr = 0.36;
          annual_pr = 18.56;
          monthly_pr = 1.55;
        } else if (req.body.amount <= 150000) {
          weekly_pr = 0.36;
          annual_pr = 18.68;
          monthly_pr = 1.56;
        } else if (req.body.amount <= 160000) {
          weekly_pr = 0.36;
          annual_pr = 18.72;
          monthly_pr = 1.56;
        } else if (req.body.amount <= 170000) {
          weekly_pr = 0.36;
          annual_pr = 18.75;
          monthly_pr = 1.56;
        } else if (req.body.amount <= 180000) {
          weekly_pr = 0.36;
          annual_pr = 18.82;
          monthly_pr = 1.57;
        } else if (req.body.amount <= 190000) {
          weekly_pr = 0.36;
          annual_pr = 18.86;
          monthly_pr = 1.57;
        } else if (req.body.amount <= 200000) {
          weekly_pr = 0.36;
          annual_pr = 18.9;
          monthly_pr = 1.58;
        } else if (req.body.amount <= 350000) {
          weekly_pr = 0.36;
          annual_pr = 18.9;
          monthly_pr = 1.58;
        } else if (req.body.amount <= 650000) {
          weekly_pr = 0.37;
          annual_pr = 19.23;
          monthly_pr = 1.6;
        } else if (req.body.amount <= 900000) {
          weekly_pr = 0.37;
          annual_pr = 19.46;
          monthly_pr = 1.62;
        } else if (req.body.amount <= 1275000) {
          weekly_pr = 0.38;
          annual_pr = 19.85;
          monthly_pr = 1.65;
        } else if (req.body.amount <= 1560000) {
          weekly_pr = 0.4;
          annual_pr = 20.63;
          monthly_pr = 1.72;
        } else if (req.body.amount <= 2100000) {
          weekly_pr = 0.4;
          annual_pr = 20.97;
          monthly_pr = 1.75;
        } else if (req.body.amount <= 2750000) {
          weekly_pr = 0.46;
          annual_pr = 23.91;
          monthly_pr = 1.99;
        } else if (req.body.amount <= 5000000) {
          weekly_pr = 0.51;
          annual_pr = 26.27;
          monthly_pr = 2.19;
        } else if (req.body.amount <= 10000000) {
          weekly_pr = 0.52;
          annual_pr = 26.97;
          monthly_pr = 2.25;
        }
        // const monthly_pr = 4*weekly_pr

        const weekly_payout = (weekly_pr * amount) / 100;
        const monthly_payout = (monthly_pr * amount) / 100;
        const annual_payout = (annual_pr * amount) / 100;
        // const conventional_bank = annual_pr - differentiation
        const price = await axios.get(
          "https://api.dexscreener.io/latest/dex/pairs/bsc/0xD454352eEeE4269f292404A7d99fb78c4d5CB55b"
        );
        console.log(price.data.pairs[0].priceUsd, "prices");
        const GGO_usd = price.data.pairs[0].priceUsd;
        const options = {
          method: "GET",
          url: "https://fixer-fixer-currency-v1.p.rapidapi.com/latest",
          params: { base: "USD", symbols: "INR" },
          headers: {
            "X-RapidAPI-Host": "fixer-fixer-currency-v1.p.rapidapi.com",
            "X-RapidAPI-Key":
              "a4c4b5a3e8mshef2c08699c04517p1025ffjsn259a25360ea0",
          },
        };
        const currency_data = await axios.request(options);
        const currency_value = 77.96;
        console.log(currency_value, "data");
        const GGO_inr = parseFloat(currency_value * GGO_usd);
        console.log(GGO_inr, "data1");
        const GGO = parseFloat(amount / GGO_inr);
        console.log(GGO, "data2");
        if (req.body.period == "weekly") {
          res.status(200).send({
            data: {
              GGo_you_get: GGO,
              current_period_pr: weekly_pr,
              annual_roi_pr: annual_pr,
              roi_amount: annual_payout,
              // bank:conventional_bank
            },
            message: "details of payment",
            status: 1,
            error: null,
          });
        } else if (req.body.period == "monthly") {
          res.status(200).send({
            data: {
              GGo_you_get: GGO,
              current_period_pr: monthly_pr,
              annual_roi_pr: annual_pr,
              roi_amount: annual_payout,
              // bank:conventional_bank
              // annual_payout:annual_payout
            },
            message: "details of payment",
            status: 1,
            error: null,
          });
        } else if (req.body.period == "yearly") {
          res.status(200).send({
            data: {
              GGo_you_get: GGO,
              current_period_pr: annual_pr,
              annual_roi_pr: annual_pr,
              roi_amount: annual_payout,
              // bank:conventional_bank
            },
            message: "details of payment",
            status: 1,
            error: null,
          });
        } else {
          res.status(200).send({
            data: null,
            message: "Invalid request",
            status: 0,
            error: null,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in get details",
        status: 0,
      });
    }
  },

  async getUserData(req, res, next) {
    try {
      const find_user = await userModel.findOne({ _id: req.body.UserId });
      console.log(find_user, "user");
      if (find_user) {
        const my_wallet = await paymentModel.findOne({
          userId: req.body.UserId,
        });
        const stake_deposit_wallet = await stake_deposit_walletModel
          .findOne({ userId: req.body.UserId })
          .lean();
        const interest_wallet = await interest_walletModel.findOne({
          UserId: req.body.UserId,
        });
        const total_referral = await userModel.countDocuments({
          refered_by: find_user.referal_id,
        });
        const updateFireBase = await userModel.findOneAndUpdate(
          { _id: req.body.UserId },
          {
            firebaseKey: req.body.firebaseKey
          },
          { new: true }
        )
        const referral_amount = await referral_walletModel.findOne({
          userId: req.body.UserId,
        });
        const net_staking_rewards = await net_staking_walletModel.findOne({
          UserId: req.body.UserId,
        });
        const get_intrest_wallet = await interest_walletModel.findOne({
          UserId: req.body.UserId,
        });

        const get_withdraw_note = await week_changeModel
          .findOne({ get_type: "withdraw" })
          .lean();
        const get_stakeInterest_wallet =
          await stake_interest_walletModel.findOne({
            UserId: req.body.UserId,
          });

        // const get_stakeReferral_wallet = await stake_referral_walletModel.findOne({userId:req.body.UserId}).lean()
        const get_stakeNsr_wallet = await stake_nsr_walletModel
          .findOne({ UserId: req.body.UserId })
          .lean();
        const liquidity_total_withdrawal =
          parseFloat(get_intrest_wallet.total_amount) +
          parseFloat(referral_amount.total_amount) +
          parseFloat(net_staking_rewards.total_amount);
        const stake_total_withdrawal =
          parseFloat(get_stakeInterest_wallet.total_amount) +
          // parseFloat(get_stakeReferral_wallet.total_amount) +
          parseFloat(get_stakeNsr_wallet.total_amount);
        console.log(stake_total_withdrawal, "stake_total_withdrawal");
        const call_back = await call_backModel.findOne({
          UserId: req.body.UserId,
        });

        if (call_back) {
          const date_time = call_back.createdAt.getTime() + 2 * 60 * 60 * 1000;
          let date = new Date(date_time);
          console.log(date, "date_time");
          if (Date.now() > date) {
            call_backModel.findOneAndDelete({ UserId: req.body.UserId }).lean();
            userModel.findOneAndUpdate(
              { _id: req.body.UserId },
              {
                call_back: false,
              },
              { new: true }
            );
          }
        }
        const get_latest = await interest_logModel
          .findOne({
            UserId: req.body.UserId,
          })
          .sort({ _id: -1 });
        // const today1 = Date.now();
        // console.log(get_latest.createdAt.getTime(),"123data")
        var next_credit = 0;
        var latest_credit_data = false;
        var next_credit_data = false;
        if (get_latest) {
          next_credit = new Date(
            get_latest.createdAt.getTime() + 7 * 24 * 60 * 60 * 1000
          );
          latest_credit_data = true;
          next_credit_data = true;
        }
        const d = new Date();
        let hour = d.getHours();
        console.log(hour, "hour1111111111");
        var isChatSupport;
        if (hour >= 9 && hour < 18) {
          isChatSupport = true;
        } else {
          isChatSupport = false;
        }
        var date_time;
        var data_now;
        const get_last_log = await deposit_logModel
          .findOne({
            userId: req.body.UserId,
            paymentType: "GGO-wallet",
            status: "Success",
          })
          .sort({ _id: -1 })
          .lean();
        if (get_last_log) {
          date_time = get_last_log.updatedAt;
          // let date = new Date(date_time);
          data_now = new Date(Date.now());
          // var diff_time = data_now.getTime() - date.getTime();
          // var dateDifference = diff_time / (1000*3600*24);
          // console.log(dateDifference,"dateDiff",my_wallet.total_amount)
          // if(my_wallet.total_amount >200000){
          //   if(dateDifference > 20){
          //     const update_referral = await userModel.findOneAndUpdate({_id:req.body.UserId},{
          //       Addreferral:false
          //     },{new:true})
          //   }
          // }else{
          //   if(dateDifference > 7){
          //     const update_referral = await userModel.findOneAndUpdate({_id:req.body.UserId},{
          //       Addreferral:false
          //     },{new:true})
          //   }
          // }
        } else {
          date_time = null;
          data_now = new Date(Date.now());
        }
        const get_holiday = await agreementModel
          .findOne({ type: "rewards" })
          .lean();
        console.log(next_credit, "data123");
        const myreferralId = find_user.referal_id;
        const price = await axios.get(
          "https://api.dexscreener.io/latest/dex/pairs/bsc/0xD454352eEeE4269f292404A7d99fb78c4d5CB55b"
        );
        console.log(price.data.pairs[0].priceUsd, "prices");
        const GGO_usd = price.data.pairs[0].priceUsd;
        const currency_value = 77.96;
        console.log(currency_value, "data");
        const GGO_inr = parseFloat(currency_value * GGO_usd);
        const data_1 = parseFloat(my_wallet.crypto) * parseFloat(GGO_inr);
        const your_profit =
          parseFloat(data_1) - parseFloat(my_wallet.total_amount);
        const your_profit_per =
          (parseFloat(your_profit) * 100) / parseFloat(my_wallet.total_amount);
        const data_2 =
          parseFloat(stake_deposit_wallet.crypto) * parseFloat(GGO_inr);
        const stake_profit =
          parseFloat(data_2) - parseFloat(stake_deposit_wallet.total_amount);
        var stake_profit_per = 0;
        if (stake_deposit_wallet.total_amount == 0) {
          stake_profit_per = 0;
        } else {
          stake_profit_per =
            (parseFloat(stake_profit) * 100) /
            parseFloat(stake_deposit_wallet.total_amount);
        }
        //   UserId: req.body.UserId,
        // });
        const data_scroll = scroll.sort(() => Math.random() - 0.5);
        const data_scroll1 = scroll1.sort(() => Math.random() - 0.5);
        // console.log(data_scroll,"srfrg")
        // if (currency_type.currency_type == "INR") {
        res.status(200).send({
          data: {
            user_details: find_user,
            liquidity: [
              {
                current_balance: my_wallet.total_amount,
                crypto: my_wallet.crypto,
                your_profit: your_profit,
                your_profit_per: your_profit_per,
              },
            ],
            stake: [
              {
                current_balance: stake_deposit_wallet.total_amount,
                crypto: stake_deposit_wallet.crypto,
                your_profit: stake_profit,
                your_profit_per: stake_profit_per,
              },
            ],
            My_earnings: interest_wallet.total_amount,
            My_referralId: myreferralId,
            Referred: total_referral,
            liquidity_Referral_earnings: referral_amount.total_amount,
            liquidity_staking_rewards: net_staking_rewards.total_amount,
            liquidity_staking_interest: get_intrest_wallet.total_amount,
            // stake_Referral_earnings: get_stakeReferral_wallet.total_amount,
            stake_staking_rewards: get_stakeNsr_wallet.total_amount,
            stake_staking_interest: get_stakeInterest_wallet.total_amount,
            latest_credit_data: latest_credit_data,
            latest_credit: get_latest,
            next_credit_data: next_credit_data,
            next_credit: next_credit,
            Live_price: GGO_inr,
            last_deposit: date_time,
            current_time: data_now,
            isChatSupport: isChatSupport,
            isHoliday: get_holiday.isHoliday,
            withdraw_maintenance: get_holiday.withdraw_maintenance,
            liquidity_total_withdrawal: liquidity_total_withdrawal,
            stake_total_withdrawal: stake_total_withdrawal,
            min_withdrawal_per_tran: get_withdraw_note.min_withdrawal_per_tran,
            max_withdrawal_per_tran: get_withdraw_note.max_withdrawal_per_tran,
            max_withdrawal_per_day: get_withdraw_note.max_withdrawal_per_day,
            // Currency_type: currency_type.currency_type,
            Kyc_verified: find_user.kycVerified,
            scroll_data_1: data_scroll,
            scroll_data_2: data_scroll1,
          },
          message: "User data",
          status: 1,
          error: null,
        });
        // } else {
        //   const options = {
        //     method: "GET",
        //     url: "https://fixer-fixer-currency-v1.p.rapidapi.com/latest",
        //     params: { base: "USD", symbols: currency_type.currency_type },
        //     headers: {
        //       "X-RapidAPI-Host": "fixer-fixer-currency-v1.p.rapidapi.com",
        //       "X-RapidAPI-Key":
        //         "a4c4b5a3e8mshef2c08699c04517p1025ffjsn259a25360ea0",
        //     },
        //   };
        //   const currency_crypto = await axios.request(options);
        //   const currency_value = price.data.pairs[0].priceUsd * 77.96;
        //   const options1 = {
        //     method: "GET",
        //     url: "https://fixer-fixer-currency-v1.p.rapidapi.com/latest",
        //     params: { base: "INR", symbols: currency_type.currency_type },
        //     headers: {
        //       "X-RapidAPI-Host": "fixer-fixer-currency-v1.p.rapidapi.com",
        //       "X-RapidAPI-Key":
        //         "a4c4b5a3e8mshef2c08699c04517p1025ffjsn259a25360ea0",
        //     },
        //   };
        //   const currency_data = await axios.request(options1);
        //   const currency =
        //     currency_data.data.rates[currency_type.currency_type];
        //   res.status(200).send({
        //     data: {
        //       this_week_withdrawal: withdrawal * currency,
        //       My_wallet: my_wallet.total_amount * currency,
        //       My_earnings: interest_wallet.total_amount * currency,
        //       My_referralId: myreferralId,
        //       Referrals: total_referral,
        //       Referral_earnings: referral_amount.total_amount * currency,
        //       Currency_type: currency_type,
        //       Live_price: currency_value,
        //       Kyc_verified: find_user.kycVerified,
        //       scroll_data: scroll,
        //     },
        //     message: "User data",
        //     status: 1,
        //     error: null,
        //   });
        // }
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error for getting data",
        status: 0,
      });
    }
  },

  async update_currency_type(req, res, next) {
    try {
      const find_user = await userModel.findOne({ _id: req.body.UserId });
      if (find_user) {
        // const present_currency = await currency_typeModel.findOne({UserId:req.body.UserId})
        // const options = {
        //     method: 'GET',
        //     url: 'https://fixer-fixer-currency-v1.p.rapidapi.com/latest',
        //     params: {base: present_currency.currency_type, symbols:req.body.currency_type },
        //     headers: {
        //       'X-RapidAPI-Host': 'fixer-fixer-currency-v1.p.rapidapi.com',
        //       'X-RapidAPI-Key': 'a4c4b5a3e8mshef2c08699c04517p1025ffjsn259a25360ea0'
        //     }
        //   };
        //   const currency_data = await axios.request(options)
        //   const currency_value = currency_data.data.rates[req.body.currency_type]
        //   console.log(currency_data.data,"data")

        const updated_data = await userModel.findOneAndUpdate(
          { _id: req.body.UserId },
          {
            currency_type: req.body.currency_type,
            country_name: req.body.country_name,
          },
          { new: true }
        );
        res.status(200).send({
          data: updated_data,
          message: "Currency type updated",
          status: 1,
          error: null,
        });
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in updating currency type",
        status: 0,
      });
    }
  },

  async referral_details(req, res, next) {
    try {
      var data1 = [];
      const show = req.body.show ? req.body.show : "all";
      const find_user = await userModel.findOne({ _id: req.body.UserId });
      if (find_user) {
        const find_referred_users = await userModel.find({
          refered_by: find_user.referal_id,
        });
        const referral_count = await userModel.countDocuments({
          refered_by: find_user.referal_id,
        });
        const referral_amount = await referral_walletModel.findOne({
          userId: req.body.UserId,
        });
        if (find_referred_users.length < 1) {
          res.status(200).send({
            data: null,
            message: "No referred users not found",
            status: 0,
          });
        } else {
          console.log(find_referred_users, "data");
          for (let i = 0; i < find_referred_users.length; i++) {
            const find_data = await userModel.findOne({
              _id: find_referred_users[i]._id,
            });
            const get_payment = await deposit_logModel.findOne({
              userId: find_referred_users[i]._id,
            });
            console.log(get_payment, "data21");
            if (get_payment) {
              const earnings = (get_payment.amount * 5) / 100;
              const data = { find_data, get_payment, earnings };
              data1.push(data);
            } else {
              const earnings = null;
              const data = { find_data, get_payment, earnings };
              data1.push(data);
            }
          }
          if (show == "all") {
            res.status(200).send({
              data: data1,
              count: referral_count,
              referal_earnings: referral_amount.total_amount,
              message: "My referrals",
              status: 1,
              error: null,
            });
          } else if (show == "l1") {
            res.status(200).send({
              data: [data1[0]],
              count: referral_count,
              referal_earnings: referral_amount.total_amount,
              message: "My referrals",
              status: 1,
              error: null,
            });
          } else if (show == "l2") {
            res.status(200).send({
              data: [data1[1]],
              count: referral_count,
              referal_earnings: referral_amount.total_amount,
              message: "My referrals",
              status: 1,
              error: null,
            });
          } else if (show == "l3") {
            res.status(200).send({
              data: [data1[2]],
              count: referral_count,
              referal_earnings: referral_amount.total_amount,
              message: "My referrals",
              status: 1,
              error: null,
            });
          } else if (show == "l4") {
            res.status(200).send({
              data: [data1[3]],
              count: referral_count,
              referal_earnings: referral_amount.total_amount,
              message: "My referrals",
              status: 1,
              error: null,
            });
          } else if (show == "l5") {
            res.status(200).send({
              data: [data1[4]],
              count: referral_count,
              referal_earnings: referral_amount.total_amount,
              message: "My referrals",
              status: 1,
              error: null,
            });
          }
        }
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral details",
        status: 0,
      });
    }
  },

  async withdrawal_balance(req, res, next) {
    try {
      // var user_pr;
      // var earn_pr;
      // var des;
      const today1 = Date.now();
      const find_payment = await paymentModel.findOne({
        userId: req.body.UserId,
      });
      const find_intrest = await interest_walletModel.findOne({
        UserId: req.body.UserId,
      });
      const find_referral_earnings = await referral_walletModel.findOne({
        userId: req.body.UserId,
      });
      const find_net_staking = await net_staking_walletModel.findOne({
        UserId: req.body.UserId,
      });
      // const get_data = await week_changeModel.findOne({
      //     get_type: "balance",
      //   });
      //   console.log(get_data, "get_data");
      //   user_pr = get_data.user_pr
      //   earn_pr = get_data.earn_pr
      //   des = get_data.des
      //   const week_time = new Date(
      //     get_data.date.getTime() + 7 * 24 * 60 * 60 * 1000
      //   );
      //   console.log(week_time, "week_time");
      //   console.log(today1, "today1");
      //   if (today1 >= week_time) {
      //     const  user_val = Math.floor(70 + Math.random() * 10);
      //     const earn_val = Math.floor(150 + Math.random() * 50);
      //     const des_val = Math.floor(1 + Math.random() * 98);
      //     const update_weekchange = await week_changeModel.findOneAndUpdate({get_type: "balance"},{
      //       user_pr : user_val,
      //       earn_pr : earn_val,
      //       des : des_val,
      //       date: Date.now()
      //     },{new:true});
      //     user_pr = update_weekchange.user_pr
      //   earn_pr = update_weekchange.earn_pr
      //   des = update_weekchange.des
      //   }

      // const total_earn = earn_pr + "." + des;
      // console.log(total_earn);

      const total_withdrawal =
        parseFloat(find_intrest.total_amount) +
        parseFloat(find_referral_earnings.total_amount) +
        parseFloat(find_net_staking.total_amount);

      res.status(200).send({
        current_balance: find_payment.total_amount,
        crypto: find_payment.crypto,
        staking_interest: find_intrest.total_amount,
        referral_earnings: find_referral_earnings.total_amount,
        net_staking_rewards: find_net_staking.total_amount,
        total_withdrawal: total_withdrawal,
        // users_pr:user_pr,
        // earned:total_earn,
        status: 1,
        message: "withdrawal balance",
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in withdrawal balance",
        status: 0,
      });
    }
  },

  async referral_link(req, res, next) {
    try {
      const find_user = await userModel.findOne({ _id: req.body.UserId });
      if (find_user) {
        res.status(200).send({
          link: `https://pearl.ggo.digital/${find_user.username}/${find_user.referal_id}`,
        });
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral link",
        status: 0,
      });
    }
  },

  async add_bonus(req, res, next) {
    try {
      const find_user = await userModel.findOne({ _id: req.body.UserId });
      if (find_user) {
        const get_net_staking = await net_staking_walletModel.findOne({
          UsrId: req.body.UserId,
        });
        if (find_user.add_bonus) {
          const update_net_staking =
            await net_staking_walletModel.findOneAndUpdate(
              { UserId: req.body.UserId },
              {
                total_amount: parseFloat(get_net_staking.total_amount) + 500,
              },
              { new: true }
            );
          const update_user = await userModel.findOneAndUpdate(
            { _id: req.body.UserId },
            {
              add_bonus: false,
            },
            { new: true }
          );
          res.status(200).send({
            data: update_user,
            message: "Bonus added successfully",
            status: 1,
            error: null,
          });
        } else {
          res.status(200).send({
            data: null,
            message: "already added",
            status: 0,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in bouns adding",
        status: 0,
      });
    }
  },

  async get_net_staking(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        const get_netstaking = await net_staking_walletModel
          .findOne({ UserId: req.body.UserId })
          .lean();
        if (get_netstaking) {
          res.status(200).send({
            data: get_netstaking,
            message: "Net staking rewards",
            status: 1,
            error: null,
          });
        } else {
          res.status(200).send({
            data: get_netstaking,
            message: "no data found",
            status: 0,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: null,
        message: "Error in get net staking rewards",
        status: 0,
      });
    }
  },

  async get_country_names(req, res, next) {
    try {
      console.log(country.country_names, "country");
      res.status(200).send({
        data: country.country_names,
        message: "countey Names",
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in get countries",
        status: 0,
      });
    }
  },

  async referral_tree(req, res, next) {
    try {
      var l1 = [];
      var l2 = [];
      var l3 = [];
      var l4 = [];
      var l5 = [];

      const layer = req.body.layer ? req.body.layer : "all";
      //console.log(layer, "layer")
      const referral_wallet = await referral_walletModel.findOne({
        userId: req.body.UserId,
      });
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        const find_referrals = await userModel
          .find({ refered_by: find_user.referal_id })
          .lean();
        if (find_referrals.length >= 1) {
          //L1
          for (let i = 0; i < find_referrals.length; i++) {
            const get_l1 = await userModel
              .findOne({ _id: find_referrals[i]._id })
              .lean();
            const find_depo_l1 = await deposit_logModel
              .find({ userId: find_referrals[i]._id, status: "Success" })
              .lean();
            const find_referred_by = await userModel
              .findOne({ referal_id: get_l1.refered_by })
              .lean();
            // console.log('find_depo_l1',find_depo_l1.length,deposits_l1)
            if (find_depo_l1.length != 0) {
              let l1amount = 0;
              let l1_referral_amount = 0;
              for (let a = 0; a < find_depo_l1.length; a++) {
                l1amount += find_depo_l1[a].amount;
                find_depo_l1[a].perAmount = (find_depo_l1[a].amount * 5) / 100;
                l1_referral_amount += (find_depo_l1[a].amount * 5) / 100;
              }
              const user_data = get_l1;
              const deposit = find_depo_l1;
              const amount = l1amount;
              const referred_by = [find_referred_by];
              const total_referral_amount = l1_referral_amount;
              const data = {
                user_data,
                deposit,
                total_referral_amount,
                amount,
                referred_by,
              };
              // console.log('l1amount',data)
              l1.push(data);
            }
            // l2
            const find_referral_l1 = await userModel.find({
              refered_by: get_l1.referal_id,
            });
            if (find_referral_l1.length >= 1) {
              for (let j = 0; j < find_referral_l1.length; j++) {
                const get_l2 = await userModel.findOne({
                  _id: find_referral_l1[j]._id,
                });
                const find_depo_l2 = await deposit_logModel
                  .find({
                    userId: get_l2._id,
                    status: "Success",
                  })
                  .lean();
                const find_referred_by2 = await userModel
                  .findOne({ referal_id: get_l2.refered_by })
                  .lean();
                const find_refferred_by2_1 = await userModel
                  .findOne({ referal_id: find_referred_by2.refered_by })
                  .lean();

                if (find_depo_l2.length != 0) {
                  let l2amount = 0;
                  let l2_referral_amount = 0;
                  for (let b = 0; b < find_depo_l2.length; b++) {
                    l2amount += find_depo_l2[b].amount;
                    find_depo_l2[b].perAmount =
                      (find_depo_l2[b].amount * 4) / 100;
                    l2_referral_amount += (find_depo_l2[b].amount * 4) / 100;
                  }
                  const user_data = get_l2;
                  const deposit = find_depo_l2;
                  const amount = l2amount;
                  const total_referral_amount = l2_referral_amount;
                  const referred_by = [find_referred_by2, find_refferred_by2_1];
                  const data = {
                    user_data,
                    deposit,
                    total_referral_amount,
                    amount,
                    referred_by,
                  };
                  // console.log('l2amount',data)
                  l2.push(data);
                }
                // l3
                const find_referral_l2 = await userModel.find({
                  refered_by: get_l2.referal_id,
                });
                if (find_referral_l2.length >= 1) {
                  for (let k = 0; k < find_referral_l2.length; k++) {
                    const get_l3 = await userModel.findOne({
                      _id: find_referral_l2[k]._id,
                    });
                    const find_depo_l3 = await deposit_logModel
                      .find({
                        userId: get_l3._id,
                        status: "Success",
                      })
                      .lean();
                    const find_referred_by3 = await userModel
                      .findOne({ referal_id: get_l3.refered_by })
                      .lean();

                    const find_referral_3_1 = await userModel
                      .findOne({ referal_id: find_referred_by3.refered_by })
                      .lean();
                    const find_referral_3_2 = await userModel
                      .findOne({ referal_id: find_referral_3_1.refered_by })
                      .lean();
                    if (find_depo_l3.length != 0) {
                      let l3amount = 0;
                      let l3_referral_amount = 0;
                      for (let c = 0; c < find_depo_l3.length; c++) {
                        l3amount += find_depo_l3[c].amount;
                        find_depo_l3[c].perAmount =
                          (find_depo_l3[c].amount * 3) / 100;
                        l3_referral_amount +=
                          (find_depo_l3[c].amount * 3) / 100;
                      }
                      const user_data = get_l3;
                      const deposit = find_depo_l3;
                      const amount = l3amount;
                      const total_referral_amount = l3_referral_amount;
                      const referred_by = [
                        find_referred_by3,
                        find_referral_3_1,
                        find_referral_3_2,
                      ];
                      const data = {
                        user_data,
                        deposit,
                        total_referral_amount,
                        amount,
                        referred_by,
                      };
                      // console.log('l3amount',data)
                      l3.push(data);
                    }
                    //l4
                    const find_referral_l3 = await userModel.find({
                      refered_by: get_l3.referal_id,
                    });
                    if (find_referral_l3.length >= 1) {
                      for (let l = 0; l < find_referral_l3.length; l++) {
                        const get_l4 = await userModel.findOne({
                          _id: find_referral_l3[l]._id,
                        });
                        const find_depo_l4 = await deposit_logModel
                          .find({
                            userId: get_l4._id,
                            status: "Success",
                          })
                          .lean();
                        const find_referred_by4 = await userModel
                          .findOne({ referal_id: get_l4.refered_by })
                          .lean();
                        const find_referral_by4_1 = await userModel
                          .findOne({ referal_id: find_referred_by4.refered_by })
                          .lean();
                        const find_referral_by4_2 = await userModel
                          .findOne({
                            referal_id: find_referral_by4_1.refered_by,
                          })
                          .lean();
                        const find_referral_by4_3 = await userModel
                          .findOne({
                            referal_id: find_referral_by4_2.refered_by,
                          })
                          .lean();
                        if (find_depo_l4.length != 0) {
                          let l4amount = 0;
                          let l4_referral_amount = 0;
                          for (let d = 0; d < find_depo_l4.length; d++) {
                            l4amount += find_depo_l4[d].amount;
                            find_depo_l4[d].perAmount =
                              (find_depo_l4[d].amount * 2) / 100;
                            l4_referral_amount +=
                              (find_depo_l4[d].amount * 2) / 100;
                          }
                          const user_data = get_l4;
                          const deposit = find_depo_l4;
                          const amount = l4amount;
                          const total_referral_amount = l4_referral_amount;
                          const referred_by = [
                            find_referred_by4,
                            find_referral_by4_1,
                            find_referral_by4_2,
                            find_referral_by4_3,
                          ];
                          const data = {
                            user_data,
                            deposit,
                            total_referral_amount,
                            amount,
                            referred_by,
                          };
                          l4.push(data);
                        }

                        // l5
                        const find_referral_l4 = await userModel.find({
                          refered_by: get_l4.referal_id,
                        });
                        if (find_referral_l4.length >= 1) {
                          for (let n = 0; n < find_referral_l4.length; n++) {
                            const get_l5 = await userModel.findOne({
                              _id: find_referral_l4[n]._id,
                            });
                            const find_depo_l5 = await deposit_logModel
                              .find({ userId: get_l5._id, status: "Success" })
                              .lean();
                            const find_referred_by5 = await userModel
                              .findOne({ referal_id: get_l5.refered_by })
                              .lean();
                            const find_referral_5_1 = await userModel
                              .findOne({
                                referal_id: find_referred_by5.refered_by,
                              })
                              .lean();
                            const find_referral_5_2 = await userModel
                              .findOne({
                                referal_id: find_referral_5_1.refered_by,
                              })
                              .lean();
                            const find_referral_5_3 = await userModel
                              .findOne({
                                referal_id: find_referral_5_2.refered_by,
                              })
                              .lean();
                            const find_referral_5_4 = await userModel
                              .findOne({
                                referal_id: find_referral_5_3.refered_by,
                              })
                              .lean();
                            if (find_depo_l5.length != 0) {
                              let l5amount = 0;
                              let l5_referral_amount = 0;
                              for (let e = 0; e < find_depo_l5.length; e++) {
                                l5amount += find_depo_l5[e].amount;
                                find_depo_l5[e].perAmount =
                                  (find_depo_l5[e].amount * 1) / 100;
                                l5_referral_amount +=
                                  (find_depo_l5[e].amount * 1) / 100;
                              }
                              const user_data = get_l5;
                              const deposit = find_depo_l5;
                              const amount = l5amount;
                              const total_referral_amount = l5_referral_amount;
                              const referred_by = [
                                find_referred_by5,
                                find_referral_5_1,
                                find_referral_5_2,
                                find_referral_5_3,
                                find_referral_5_4,
                              ];
                              const data = {
                                user_data,
                                deposit,
                                total_referral_amount,
                                amount,
                                referred_by,
                              };
                              l5.push(data);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          const data =
            l1.length + l2.length + l3.length + l4.length + l5.length;
          var l1_total = 0;
          for (let i = 0; i < l1.length; i++) {
            for (let j = 0; j < l1[i].deposit.length; j++) {
              l1_total = l1_total + l1[i].deposit[j].perAmount;
            }
          }
          var l2_total = 0;
          for (let k = 0; k < l2.length; k++) {
            for (let l = 0; l < l2[k].deposit.length; l++) {
              l2_total = l2_total + l2[k].deposit[l].perAmount;
            }
          }
          var l3_total = 0;
          for (let m = 0; m < l3.length; m++) {
            for (let n = 0; n < l3[m].deposit.length; n++) {
              l3_total = l3_total + l3[m].deposit[n].perAmount;
            }
          }
          var l4_total = 0;
          for (let o = 0; o < l4.length; o++) {
            for (let p = 0; p < l4[o].deposit.length; p++) {
              l4_total = l4_total + l4[o].deposit[p].perAmount;
            }
          }
          var l5_total = 0;
          for (let q = 0; q < l5.length; q++) {
            for (let r = 0; r < l5[q].deposit.length; r++) {
              l5_total = l5_total + l5[q].deposit[r].perAmount;
            }
          }
          const peramount_total =
            l1_total + l2_total + l3_total + l4_total + l5_total;
          // console.log(peramount_total,"fj")
          console.log(l1_total, "ij");
          console.log(l2_total, "kl");
          console.log(l3_total, "mn");
          console.log(l4_total, "op");
          console.log(l5_total, "qr");
          if (layer == "all") {
            res.status(200).send({
              data: [
                {
                  name: "l1",
                  response: l1,
                },
                {
                  name: "l2",
                  response: l2,
                },
                {
                  name: "l3",
                  response: l3,
                },
                {
                  name: "l4",
                  response: l4,
                },
                {
                  name: "l5",
                  response: l5,
                },
              ],
              referral_wallet: referral_wallet,
              referral_count: data,
              total_referral_earned: peramount_total,
              message: "referral tree",
              status: 1,
              error: null,
            });
          } else if (layer == "l1") {
            res.status(200).send({
              data: [
                {
                  name: "l1",
                  response: l1,
                },
              ],
              referral_wallet: referral_wallet,
              referral_count: data,
              message: "layer 1",
              status: 1,
              error: null,
            });
          } else if (layer == "l2") {
            res.status(200).send({
              data: [
                {
                  name: "l2",
                  response: l2,
                },
              ],
              referral_wallet: referral_wallet,
              referral_count: data,
              message: "layer 2",
              status: 1,
              error: null,
            });
          } else if (layer == "l3") {
            res.status(200).send({
              data: [
                {
                  name: "l3",
                  response: l3,
                },
              ],
              referral_wallet: referral_wallet,
              referral_count: data,
              message: "layer 3",
              status: 1,
              error: null,
            });
          } else if (layer == "l4") {
            res.status(200).send({
              data: [
                {
                  name: "l4",
                  response: l4,
                },
              ],
              referral_wallet: referral_wallet,
              referral_count: data,
              message: "layer 4",
              status: 1,
              error: null,
            });
          } else if (layer == "l5") {
            res.status(200).send({
              data: [
                {
                  name: "l5",
                  response: l5,
                },
              ],
              referral_wallet: referral_wallet,
              referral_count: data,
              message: "referral tree",
              status: 1,
              error: null,
            });
          } else {
            res.status(200).send({
              data: null,
              message: "invalid key",
              status: 0,
            });
          }
        } else {
          res.status(200).send({
            data: null,
            message: "No referral data",
            status: 0,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree",
        status: 0,
      });
    }
  },

  async verify_withdraw(req, res, next) {
    let { id } = req.params;
    try {
      const find_user = await userModel.findOne({ _id: id }).lean();
      if (find_user) {
        if (find_user.passcode == req.query.passcode) {
          const verify = await userModel.findOneAndUpdate(
            { _id: id },
            {
              withdraw_verify: true,
            },
            { new: true }
          );
          console.log(verify, "verify");
          res.send({
            message: "withdraw verified.Return to app",
            status: 1,
          });
        } else {
          res.status(200).send({
            Message: "withdraw verification failed.Try again.",
            status: 0,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in withdraw verify",
        status: 0,
      });
    }
  },

  async call_back(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        if (!find_user.first_deposit) {
          const find_callback = await call_backModel
            .findOne({ UserId: req.body.UserId })
            .lean();
          if (!find_callback) {
            const schema = new call_backModel();
            (schema.UserId = req.body.UserId),
              (schema.phone_number = req.body.phone_number),
              (schema.message = req.body.message);
            const create_callback = await call_backModel.create(schema);
            if (create_callback) {
              const update_user = await userModel.findOneAndUpdate(
                { _id: req.body.UserId },
                {
                  call_back: true,
                },
                { new: true }
              );
            }
            res.status(200).send({
              data: create_callback,
              message: "Our team will contact you with in 2hr",
              status: 1,
              error: null,
            });
          } else {
            res.status(200).send({
              data: null,
              message: "You are already requeted the call back",
              status: 0,
            });
          }
        } else {
          res.status(200).send({
            data: null,
            message: "Need to deposit first",
            status: 0,
          });
        }
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in call back",
        status: 0,
      });
    }
  },

  async complete_callback(req, res, next) {
    try {
      const call_back = await call_backModel.findOne({
        UserId: req.body.UserId,
      });
      console.log(call_back, "user")
      if (call_back) {
        console.log(call_back.createdAt, "call_back.createdAt");

        const date_time = call_back.createdAt.getTime() + 2 * 60 * 60 * 1000;
        let date = new Date(date_time);
        let data_now = new Date(Date.now());
        console.log(date, "date_time", data_now);
        var dateDifference = 0;
        var callback_time = 0;
        var completed;
        if (data_now < date) {
          dateDifference = date - data_now;
          completed = false;
        } else {
          call_backModel.findOneAndDelete({ UserId: req.body.UserId }).lean();
          userModel.findOneAndUpdate(
            { _id: req.body.UserId },
            {
              call_back: false,
            },
            { new: true }
          );
          completed = true;
        }
        console.log((dateDifference / 60) * 1000, "dateDifference");
        function millisToMinutesAndSeconds(millis) {
          var minutes = Math.floor(millis / 60000);
          var seconds = ((millis % 60000) / 1000).toFixed(0);
          callback_time = minutes + ":" + (seconds < 10 ? "0" : "") + seconds;
          console.log(
            minutes + ":" + (seconds < 10 ? "0" : "") + seconds,
            "gsrgrdgdg",
            callback_time
          );
        }
        millisToMinutesAndSeconds(dateDifference);
        res.status(200).send({
          data: { left_time: callback_time },
          is_eligible_new_request: completed,
          message:
            "You’ve already requested callback. Please wait till our executives reach you.",
          status: 1,
          error: null,
        });
      }
      else {
        res.status(200).send({
          data: { left_time: callback_time },
          is_eligible_new_request: true,
          message:
            "Requested a Callback.",
          status: 1,
          error: null,
        });
      }

    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in complete callback",
        status: 0,
      });
    }
  },

  async update_callback(req, res, next) {
    try {
      const schema = req.body;
      const update_callBack = await call_backModel.findOneAndUpdate({ _id: req.body.callbackId }, schema, { new: true });
      res.status(200).send({
        data: { update_callBack: update_callBack },
        error: null,
        message: "Updated call back Successfully",
        status: 1,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in updating call back",
        status: 0,
      });
    }
  },

  async updates_details(req, res, next) {
    try {
      const schema = new updates_detailsModel();
      schema.heading = req.body.heading;
      schema.description = req.body.description;
      schema.date = req.body.date;
      let userDetails = await userModel.findOne({ _id: req.body.userId }).lean();
      console.log('userDetails', userDetails)
      var message = {
        to: userDetails.firebaseKey,
        notification: { title: req.body.heading, body: req.body.description },
      };

      // let res;
      fcm.send(message, function (err, response) {
        if (err) {
          //    res = err;
          //   console.log("Something has gone wrong!", err);
        } else {
          // res = response
          //  console.log("Successfully sent with response: ", response);
        }
      });
      // console.log('res', response)
      const create_updates = await updates_detailsModel.create(schema);
      res.status(200).send({
        data: create_updates,
        // firebaseResponse: res,
        message: "created updates details",
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in updates details",
        status: 0,
      });
    }
  },

  async get_update_details(req, res, next) {
    try {
      const get_all = await updates_detailsModel.find().lean();
      res.status(200).send({
        data: get_all,
        message: "get all updates",
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in get update details",
        statu: 0,
      });
    }
  },

  async referral_tree_2_0(req, res, next) {
    try {
      const price = await axios.get(
        "https://api.dexscreener.io/latest/dex/pairs/bsc/0xD454352eEeE4269f292404A7d99fb78c4d5CB55b"
      );
      const GGO_usd = price.data.pairs[0].priceUsd;
      const currency_value = 77.96;
      const GGO_inr = parseFloat(currency_value * GGO_usd);
      const today = new Date();
      let l1v = 5;
      let l2v = 4;
      let l3v = 3;
      let l4v = 2;
      let l5v = 1;
      let all = 0.25;
      if (
        req.body.UserId == "635b651591a2d6ba72072375" ||
        req.body.UserId == "638087c821ae85da49abfff0" ||
        req.body.UserId == "6389f8aae953e34e89e5b411"
      ) {
        l1v = 12.5;
        l2v = 1;
        l3v = 1;
        l4v = 1;
        l5v = 1;
        all = 1;
      }
      const criteriaCountL1 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetails._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l1v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetails._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [5, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetails._id",
            referredby_firstname: "$referedDetails.fullname",
            referredby_email: "$referedDetails.email",
            referal_id: "$referedDetails.referal_id",
            rerenceList: [
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
            GGO_inr: "$ggo",
            today: today,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            users: { $first: "$deposit_logs_total" },
            ggo_coin: { $first: "$GGO_inr" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL1 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetails" },
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetails._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l1v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,

            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL2 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsData._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l2v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsData._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l2v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsData._id",
            today: "$day",
            referredby_firstname: "$referedDetailsData.fullname",
            referredby_email: "$referedDetailsData.email",
            rerenceList: [
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
        {
          $unwind: {
            path: "$deposit_logs_total",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $addFields: {
            totalamount_ggo: {
              $divide: ["$deposit_logs_total.totalamount", GGO_inr],
            },
            totalperamount_ggo: {
              $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
            },
            dif: {
              $round: [
                {
                  $divide: [
                    { $subtract: ["$today", "$deposit_logs_total.createdAt"] },
                    1000 * 60 * 60 * 24,
                  ],
                },
                0,
              ],
            },
          },
        },
        {
          $addFields: {
            diff: {
              $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
            },
          },
        },
        {
          $addFields: {
            user: {
              firstname: "$referredby_firstname",
              email: "$referredby_email",
              totalamount_ggo: "$totalamount_ggo",
              totalperamount_ggo: "$totalperamount_ggo",
              totalamount: "$deposit_logs_total.totalamount",
              totalperamount: "$deposit_logs_total.totalperamount",
              userstatus: {
                $cond: {
                  if: { $lte: ["$dif", 3] },
                  then: "active",
                  else: "inactive",
                },
              },
              days: "$diff",
              createdAt: "$deposit_logs_total.createdAt",
            },
          },
        },
        {
          $unset: [
            "diff",
            "dif",
            "totalamount_ggo",
            "totalperamount_ggo",
            "today",
            "ggo_coin",
            "deposit_logs_total",
            "referredby_email",
            "referredby_firstname",
          ],
        },
      ];
      const criteriaCountTotalL2 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        // {
        //   $addFields: {
        //     holders: { $size: "$referedDetails" },
        //   },
        // },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsData" },
          },
        },
        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsData._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l2v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL3 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            // preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL3._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l3v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL3._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l3v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $project: {
            id: "$referedDetailsDataL3._id",
            referredby_firstname: "$referedDetailsDataL3.fullname",
            referredby_email: "$referedDetailsDataL3.email",
            referal_id: "$referedDetailsDataL3.referal_id",
            rerenceList: [
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
            today: "$day",
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //  referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL3 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL3" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL3._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l3v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL4 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            // as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            //preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL4._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l4v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL4._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l4v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL4._id",
            referredby_firstname: "$referedDetailsDataL4.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL4.email",
            referal_id: "$referedDetailsDataL4.referal_id",
            rerenceList: [
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            // referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL4 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            //     localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            //  as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL4" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL4._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l4v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL5 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL5._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l5v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL5._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l5v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL5._id",
            referredby_firstname: "$referedDetailsDataL5.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL5.email",
            referal_id: "$referedDetailsDataL5.referal_id",
            rerenceList: [
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL5 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            //     localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            //  as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL5" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL5._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l5v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL6 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL6._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL6._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL6._id",
            referredby_firstname: "$referedDetailsDataL6.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL6.email",
            referal_id: "$referedDetailsDataL6.referal_id",
            rerenceList: [
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL6 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            //     localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            //  as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        // {
        //   $addFields: {
        //     holders: { $size: "$referedDetailsDataL5" },
        //   },
        // },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL6" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL6._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL7 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL7" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL7" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL7._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL8 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL8" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL8" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL8._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL9 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL9" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL9" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL9._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL10 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL10" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL10" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL10._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL11 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL11" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL11" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL11._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL12 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL12" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL12" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL12._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL13 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL12" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL13" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL13" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL13._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL14 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL12" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL13" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL14" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL14" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL14._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL15 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL12" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL13" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL14" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL14.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL15",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL15" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL15" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL15._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL7 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL7._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL7._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL7._id",
            referredby_firstname: "$referedDetailsDataL7.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL7.email",
            referal_id: "$referedDetailsDataL7.referal_id",
            rerenceList: [
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL8 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL8._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL8._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL8._id",
            referredby_firstname: "$referedDetailsDataL8.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL8.email",
            referal_id: "$referedDetailsDataL8.referal_id",
            rerenceList: [
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL9 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL9._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL9._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL9._id",
            referredby_firstname: "$referedDetailsDataL9.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL9.email",
            referal_id: "$referedDetailsDataL9.referal_id",
            rerenceList: [
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL10 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL10._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL10._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL10._id",
            referredby_firstname: "$referedDetailsDataL10.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL10.email",
            referal_id: "$referedDetailsDataL10.referal_id",
            rerenceList: [
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL11 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL11._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL11._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL11._id",
            referredby_firstname: "$referedDetailsDataL11.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL11.email",
            referal_id: "$referedDetailsDataL11.referal_id",
            rerenceList: [
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL12 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL12._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL12._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL12._id",
            referredby_firstname: "$referedDetailsDataL12.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL12.email",
            referal_id: "$referedDetailsDataL12.referal_id",
            rerenceList: [
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL13 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL13",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL13._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL13._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL13._id",
            referredby_firstname: "$referedDetailsDataL13.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL13.email",
            referal_id: "$referedDetailsDataL13.referal_id",
            rerenceList: [
              {
                leval: "l13",
                name: "$referedDetailsDataL12.fullname",
                email: "$referedDetailsDataL12.email",
                referred_id: "$referedDetailsDataL12.referal_id",
              },
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL14 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL13",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL14",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL14._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL14._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL14._id",
            referredby_firstname: "$referedDetailsDataL14.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL14.email",
            referal_id: "$referedDetailsDataL14.referal_id",
            rerenceList: [
              {
                leval: "l14",
                name: "$referedDetailsDataL13.fullname",
                email: "$referedDetailsDataL13.email",
                referred_id: "$referedDetailsDataL13.referal_id",
              },
              {
                leval: "l13",
                name: "$referedDetailsDataL12.fullname",
                email: "$referedDetailsDataL12.email",
                referred_id: "$referedDetailsDataL12.referal_id",
              },
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL15 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL13",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL14",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL14.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL15",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL15",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL15._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL15._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL15._id",
            referredby_firstname: "$referedDetailsDataL15.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL15.email",
            referal_id: "$referedDetailsDataL15.referal_id",
            rerenceList: [
              {
                leval: "l15",
                name: "$referedDetailsDataL14.fullname",
                email: "$referedDetailsDataL14.email",
                referred_id: "$referedDetailsDataL14.referal_id",
              },
              {
                leval: "l14",
                name: "$referedDetailsDataL13.fullname",
                email: "$referedDetailsDataL13.email",
                referred_id: "$referedDetailsDataL13.referal_id",
              },
              {
                leval: "l13",
                name: "$referedDetailsDataL12.fullname",
                email: "$referedDetailsDataL12.email",
                referred_id: "$referedDetailsDataL12.referal_id",
              },
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteria = [
        {
          $addFields: {
            id: { $toString: "$_id" },
            ggo: { $toDouble: GGO_inr },
            day: today,
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
      ];
      if (req.body.layer == "l1") {
        criteria.splice(
          4,
          0,
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetails._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l1v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetails._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l1v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetails._id",
              referredby_firstname: "$referedDetails.fullname",
              referredby_email: "$referedDetails.email",
              referal_id: "$referedDetails.referal_id",
              rerenceList: [
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
              GGO_inr: "$ggo",
              today: today,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              users: { $first: "$deposit_logs_total" },
              ggo_coin: { $first: "$GGO_inr" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$users",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$users.totalamount", "$ggo_coin"],
              },
              totalperamount_ggo: {
                $divide: ["$users.totalperamount", "$ggo_coin"],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$users.totalamount",
                totalperamount: "$users.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "users",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l2") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsData._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l2v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsData._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l2v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsData._id",
              today: "$day",
              referredby_firstname: "$referedDetailsData.fullname",
              referredby_email: "$referedDetailsData.email",
              rerenceList: [
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l3") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              // preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL3._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l3v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL3._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l3v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },

          {
            $project: {
              id: "$referedDetailsDataL3._id",
              referredby_firstname: "$referedDetailsDataL3.fullname",
              referredby_email: "$referedDetailsDataL3.email",
              referal_id: "$referedDetailsDataL3.referal_id",
              rerenceList: [
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
              today: "$day",
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //  referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l4") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              // localField: "referedDetailsDataL3.referal_id",
              // foreignField: "refered_by",
              // as: "referedDetailsDataL4",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              //preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL4._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l4v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL4._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l4v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL4._id",
              referredby_firstname: "$referedDetailsDataL4.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL4.email",
              referal_id: "$referedDetailsDataL4.referal_id",
              rerenceList: [
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              // referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l5") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL5._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l5v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL5._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l5v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL5._id",
              referredby_firstname: "$referedDetailsDataL5.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL5.email",
              referal_id: "$referedDetailsDataL5.referal_id",
              rerenceList: [
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l6") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL6._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL6._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL6._id",
              referredby_firstname: "$referedDetailsDataL6.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL6.email",
              referal_id: "$referedDetailsDataL6.referal_id",
              rerenceList: [
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l7") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL7._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL7._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL7._id",
              referredby_firstname: "$referedDetailsDataL7.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL7.email",
              referal_id: "$referedDetailsDataL7.referal_id",
              rerenceList: [
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l8") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL8._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL8._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL8._id",
              referredby_firstname: "$referedDetailsDataL8.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL8.email",
              referal_id: "$referedDetailsDataL8.referal_id",
              rerenceList: [
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l9") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL9._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL9._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL9._id",
              referredby_firstname: "$referedDetailsDataL9.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL9.email",
              referal_id: "$referedDetailsDataL9.referal_id",
              rerenceList: [
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l10") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL10._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL10._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL10._id",
              referredby_firstname: "$referedDetailsDataL10.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL10.email",
              referal_id: "$referedDetailsDataL10.referal_id",
              rerenceList: [
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l11") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL11._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL11._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL11._id",
              referredby_firstname: "$referedDetailsDataL11.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL11.email",
              referal_id: "$referedDetailsDataL11.referal_id",
              rerenceList: [
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l12") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL12._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL12._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL12._id",
              referredby_firstname: "$referedDetailsDataL12.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL12.email",
              referal_id: "$referedDetailsDataL12.referal_id",
              rerenceList: [
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l13") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL12.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL13",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL13",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL13._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL13._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL13._id",
              referredby_firstname: "$referedDetailsDataL13.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL13.email",
              referal_id: "$referedDetailsDataL13.referal_id",
              rerenceList: [
                {
                  leval: "l13",
                  name: "$referedDetailsDataL12.fullname",
                  email: "$referedDetailsDataL12.email",
                  referred_id: "$referedDetailsDataL12.referal_id",
                },
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l14") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL12.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL13",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL13",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL13.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL14",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL14",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL14._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL14._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL14._id",
              referredby_firstname: "$referedDetailsDataL14.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL14.email",
              referal_id: "$referedDetailsDataL14.referal_id",
              rerenceList: [
                {
                  leval: "l14",
                  name: "$referedDetailsDataL13.fullname",
                  email: "$referedDetailsDataL13.email",
                  referred_id: "$referedDetailsDataL13.referal_id",
                },
                {
                  leval: "l13",
                  name: "$referedDetailsDataL12.fullname",
                  email: "$referedDetailsDataL12.email",
                  referred_id: "$referedDetailsDataL12.referal_id",
                },
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }
      if (req.body.layer == "l15") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL12.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL13",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL13",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL13.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL14",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL14",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL14.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL15",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL15",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL15._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL15._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL15._id",
              referredby_firstname: "$referedDetailsDataL15.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL15.email",
              referal_id: "$referedDetailsDataL15.referal_id",
              rerenceList: [
                {
                  leval: "l15",
                  name: "$referedDetailsDataL14.fullname",
                  email: "$referedDetailsDataL14.email",
                  referred_id: "$referedDetailsDataL14.referal_id",
                },
                {
                  leval: "l14",
                  name: "$referedDetailsDataL13.fullname",
                  email: "$referedDetailsDataL13.email",
                  referred_id: "$referedDetailsDataL13.referal_id",
                },
                {
                  leval: "l13",
                  name: "$referedDetailsDataL12.fullname",
                  email: "$referedDetailsDataL12.email",
                  referred_id: "$referedDetailsDataL12.referal_id",
                },
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          }
        );
      }

      // const userL1 = userModel.aggregate(criteria);

      // const l1count = userModel.aggregate(criteriaCountL1);
      // const l2count = userModel.aggregate(criteriaCountL2);
      // const l3count = userModel.aggregate(criteriaCountL3);
      // const l4count = userModel.aggregate(criteriaCountL4);
      // const l5count = userModel.aggregate(criteriaCountL5);
      // const l6count = userModel.aggregate(criteriaCountL6);
      // const l7count = userModel.aggregate(criteriaCountL7);
      // const l8count = userModel.aggregate(criteriaCountL8);
      // const l9count = userModel.aggregate(criteriaCountL9);
      // const l10count = userModel.aggregate(criteriaCountL10);
      // const l11count = userModel.aggregate(criteriaCountL11);
      // const l12count = userModel.aggregate(criteriaCountL12);
      // const l13count = userModel.aggregate(criteriaCountL13);
      // const l14count = userModel.aggregate(criteriaCountL14);
      // const l15count = userModel.aggregate(criteriaCountL15);

      // const criteriaCountTotalAmountL2 =
      //   userModel.aggregate(criteriaCountTotalL2);
      // const criteriaCountTotalAmountL1 =
      //   userModel.aggregate(criteriaCountTotalL1);
      // const criteriaCountTotalAmountL3 =
      //   userModel.aggregate(criteriaCountTotalL3);
      // const criteriaCountTotalAmountL4 =
      //   userModel.aggregate(criteriaCountTotalL4);
      // const criteriaCountTotalAmountL5 =
      //   userModel.aggregate(criteriaCountTotalL5);
      // const criteriaCountTotalAmountL6 =
      //   userModel.aggregate(criteriaCountTotalL6);
      // const criteriaCountTotalAmountL7 =
      //   userModel.aggregate(criteriaCountTotalL7);
      // const criteriaCountTotalAmountL8 =
      //   userModel.aggregate(criteriaCountTotalL8);
      // const criteriaCountTotalAmountL9 =
      //   userModel.aggregate(criteriaCountTotalL9);
      // const criteriaCountTotalAmountL10 = userModel.aggregate(
      //   criteriaCountTotalL10
      // );
      // const criteriaCountTotalAmountL11 = userModel.aggregate(
      //   criteriaCountTotalL11
      // );
      // const criteriaCountTotalAmountL12 = userModel.aggregate(
      //   criteriaCountTotalL12
      // );
      // const criteriaCountTotalAmountL13 = userModel.aggregate(
      //   criteriaCountTotalL13
      // );
      // const criteriaCountTotalAmountL14 = userModel.aggregate(
      //   criteriaCountTotalL14
      // );
      // const criteriaCountTotalAmountL15 = userModel.aggregate(
      //   criteriaCountTotalL15
      // );
      let userList,
        l1 = [],
        l2 = [],
        l3 = [],
        l4 = [],
        l5 = [],
        l6 = [],
        l7 = [],
        l8 = [],
        l9 = [],
        l10 = [],
        l11 = [],
        l12 = [],
        l13 = [],
        l14 = [],
        l15 = [],
        criteriaCountTotalsL2 = [],
        criteriaCountTotalsL1 = [],
        criteriaCountTotalsL3 = [],
        criteriaCountTotalsL4 = [],
        criteriaCountTotalsL5 = [],
        criteriaCountTotalsL6 = [],
        criteriaCountTotalsL7 = [],
        criteriaCountTotalsL8 = [],
        criteriaCountTotalsL9 = [],
        criteriaCountTotalsL10 = [],
        criteriaCountTotalsL11 = [],
        criteriaCountTotalsL12 = [],
        criteriaCountTotalsL13 = [],
        criteriaCountTotalsL14 = [],
        criteriaCountTotalsL15 = [];
      userList = await userModel.aggregate(criteria);
      if (req.body.layer == "l1") {
        l1 = await userModel.aggregate(criteriaCountL1);
        criteriaCountTotalsL1 = await userModel.aggregate(criteriaCountTotalL1);
      }
      if (req.body.layer == "l2") {
        l2 = await userModel.aggregate(criteriaCountL2);
        criteriaCountTotalsL2 = await userModel.aggregate(criteriaCountTotalL2);
      }
      if (req.body.layer == "l3") {
        l3 = await userModel.aggregate(criteriaCountL3);
        criteriaCountTotalsL3 = await userModel.aggregate(criteriaCountTotalL3);
      }
      if (req.body.layer == "l4") {
        l4 = await userModel.aggregate(criteriaCountL4);
        criteriaCountTotalsL4 = await userModel.aggregate(criteriaCountTotalL4);
      }
      if (req.body.layer == "l5") {
        l5 = await userModel.aggregate(criteriaCountL5);
        criteriaCountTotalsL5 = await userModel.aggregate(criteriaCountTotalL5);
      }
      if (req.body.layer == "l6") {
        l6 = await userModel.aggregate(criteriaCountL6);
        criteriaCountTotalsL6 = await userModel.aggregate(criteriaCountTotalL6);
      }
      if (req.body.layer == "l7") {
        l7 = await userModel.aggregate(criteriaCountL7);
        criteriaCountTotalsL7 = await userModel.aggregate(criteriaCountTotalL7);
      }
      if (req.body.layer == "l8") {
        l8 = await userModel.aggregate(criteriaCountL8);
        criteriaCountTotalsL8 = await userModel.aggregate(criteriaCountTotalL8);
      }
      if (req.body.layer == "l9") {
        l9 = await userModel.aggregate(criteriaCountL9);
        criteriaCountTotalsL9 = await userModel.aggregate(criteriaCountTotalL9);
      }
      if (req.body.layer == "l10") {
        l10 = await userModel.aggregate(criteriaCountL10);
        criteriaCountTotalsL10 = await userModel.aggregate(
          criteriaCountTotalL10
        );
      }
      if (req.body.layer == "l11") {
        l11 = await userModel.aggregate(criteriaCountL11);
        criteriaCountTotalsL11 = await userModel.aggregate(
          criteriaCountTotalL11
        );
      }
      if (req.body.layer == "l12") {
        l12 = await userModel.aggregate(criteriaCountL12);
        criteriaCountTotalsL12 = await userModel.aggregate(
          criteriaCountTotalL12
        );
      }
      if (req.body.layer == "l13") {
        l13 = await userModel.aggregate(criteriaCountL13);
        criteriaCountTotalsL13 = await userModel.aggregate(
          criteriaCountTotalL13
        );
      }
      if (req.body.layer == "l14") {
        l14 = await userModel.aggregate(criteriaCountL14);
        criteriaCountTotalsL14 = await userModel.aggregate(
          criteriaCountTotalL14
        );
      }
      if (req.body.layer == "l15") {
        l15 = await userModel.aggregate(criteriaCountL15);
        criteriaCountTotalsL15 = await userModel.aggregate(
          criteriaCountTotalL15
        );
      }
      let L1 = l1.length != 0 ? l1.length : 0;
      let L2 = l2.length != 0 ? l2.length : 0;
      let L3 = l3.length != 0 ? l3.length : 0;
      let L4 = l4.length != 0 ? l4.length : 0;
      let L5 = l5.length != 0 ? l5.length : 0;
      let L6 = l6.length != 0 ? l6.length : 0;
      let L7 = l7.length != 0 ? l7.length : 0;
      let L8 = l8.length != 0 ? l8.length : 0;
      let L9 = l9.length != 0 ? l9.length : 0;
      let L10 = l10.length != 0 ? l10.length : 0;
      let L11 = l11.length != 0 ? l11.length : 0;
      let L12 = l12.length != 0 ? l12.length : 0;
      let L13 = l13.length != 0 ? l13.length : 0;
      let L14 = l14.length != 0 ? l14.length : 0;
      let L15 = l15.length != 0 ? l15.length : 0;

      let layerlength1 = criteriaCountTotalsL1.length != 0 ? 1 : 0;
      let layerlength2 = criteriaCountTotalsL2.length != 0 ? 1 : 0;
      let layerlength3 = criteriaCountTotalsL3.length != 0 ? 1 : 0;
      let layerlength4 = criteriaCountTotalsL4.length != 0 ? 1 : 0;
      let layerlength5 = criteriaCountTotalsL5.length != 0 ? 1 : 0;
      let layerlength6 = criteriaCountTotalsL6.length != 0 ? 1 : 0;
      let layerlength7 = criteriaCountTotalsL7.length != 0 ? 1 : 0;
      let layerlength8 = criteriaCountTotalsL8.length != 0 ? 1 : 0;
      let layerlength9 = criteriaCountTotalsL9.length != 0 ? 1 : 0;
      let layerlength10 = criteriaCountTotalsL10.length != 0 ? 1 : 0;
      let layerlength11 = criteriaCountTotalsL11.length != 0 ? 1 : 0;
      let layerlength12 = criteriaCountTotalsL12.length != 0 ? 1 : 0;
      let layerlength13 = criteriaCountTotalsL13.length != 0 ? 1 : 0;
      let layerlength14 = criteriaCountTotalsL14.length != 0 ? 1 : 0;
      let layerlength15 = criteriaCountTotalsL15.length != 0 ? 1 : 0;

      let layerCount =
        layerlength1 +
        layerlength2 +
        layerlength3 +
        layerlength4 +
        layerlength5 +
        layerlength6 +
        layerlength7 +
        layerlength8 +
        layerlength9 +
        layerlength10 +
        layerlength11 +
        layerlength12 +
        layerlength13 +
        layerlength14 +
        layerlength15;
      const main_count =
        L1 +
        L2 +
        L3 +
        L4 +
        L5 +
        L6 +
        L7 +
        L8 +
        L9 +
        L10 +
        L11 +
        L12 +
        L13 +
        L14 +
        L15;

      let output = {
        user_data_list: userList,
        referal_id: userList.length != 0 ? userList[0].referal_id : "",
        count: main_count,
        layerCount: layerCount,
      };
      if (req.body.layer == "l1" && criteriaCountTotalsL1.length != 0) {
        output.business_crypto = criteriaCountTotalsL1[0].business_ggo;
        output.business_balance = criteriaCountTotalsL1[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL1[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL1[0].earnings_amount;
      }
      if (req.body.layer == "l2" && criteriaCountTotalsL2.length != 0) {
        output.business_crypto = criteriaCountTotalsL2[0].business_ggo;
        output.business_balance = criteriaCountTotalsL2[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL2[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL2[0].earnings_amount;
      }
      if (req.body.layer == "l3" && criteriaCountTotalsL3.length != 0) {
        output.business_crypto = criteriaCountTotalsL3[0].business_ggo;
        output.business_balance = criteriaCountTotalsL3[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL3[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL3[0].earnings_amount;
      }
      if (req.body.layer == "l4" && criteriaCountTotalsL4.length != 0) {
        output.business_crypto = criteriaCountTotalsL4[0].business_ggo;
        output.business_balance = criteriaCountTotalsL4[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL4[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL4[0].earnings_amount;
      }
      if (req.body.layer == "l5" && criteriaCountTotalsL5.length != 0) {
        output.business_crypto = criteriaCountTotalsL5[0].business_ggo;
        output.business_balance = criteriaCountTotalsL5[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL5[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL5[0].earnings_amount;
      }
      if (req.body.layer == "l6" && criteriaCountTotalsL6.length != 0) {
        output.business_crypto = criteriaCountTotalsL6[0].business_ggo;
        output.business_balance = criteriaCountTotalsL6[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL6[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL6[0].earnings_amount;
      }
      if (req.body.layer == "l7" && criteriaCountTotalsL7.length != 0) {
        output.business_crypto = criteriaCountTotalsL7[0].business_ggo;
        output.business_balance = criteriaCountTotalsL7[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL7[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL7[0].earnings_amount;
      }
      if (req.body.layer == "l8" && criteriaCountTotalsL8.length != 0) {
        output.business_crypto = criteriaCountTotalsL8[0].business_ggo;
        output.business_balance = criteriaCountTotalsL8[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL8[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL8[0].earnings_amount;
      }
      if (req.body.layer == "l9" && criteriaCountTotalsL9.length != 0) {
        output.business_crypto = criteriaCountTotalsL9[0].business_ggo;
        output.business_balance = criteriaCountTotalsL9[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL9[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL9[0].earnings_amount;
      }
      if (req.body.layer == "l10" && criteriaCountTotalsL10.length != 0) {
        output.business_crypto = criteriaCountTotalsL10[0].business_ggo;
        output.business_balance = criteriaCountTotalsL10[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL10[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL10[0].earnings_amount;
      }
      if (req.body.layer == "l11" && criteriaCountTotalsL11.length != 0) {
        output.business_crypto = criteriaCountTotalsL11[0].business_ggo;
        output.business_balance = criteriaCountTotalsL11[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL11[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL11[0].earnings_amount;
      }
      if (req.body.layer == "l12" && criteriaCountTotalsL12.length != 0) {
        output.business_crypto = criteriaCountTotalsL12[0].business_ggo;
        output.business_balance = criteriaCountTotalsL12[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL12[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL12[0].earnings_amount;
      }
      if (req.body.layer == "l13" && criteriaCountTotalsL13.length != 0) {
        output.business_crypto = criteriaCountTotalsL13[0].business_ggo;
        output.business_balance = criteriaCountTotalsL13[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL13[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL13[0].earnings_amount;
      }
      if (req.body.layer == "l14" && criteriaCountTotalsL14.length != 0) {
        output.business_crypto = criteriaCountTotalsL14[0].business_ggo;
        output.business_balance = criteriaCountTotalsL14[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL14[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL14[0].earnings_amount;
      }
      if (req.body.layer == "l15" && criteriaCountTotalsL15.length != 0) {
        output.business_crypto = criteriaCountTotalsL15[0].business_ggo;
        output.business_balance = criteriaCountTotalsL15[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL15[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL15[0].earnings_amount;
      }

      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },

  async referral_tree_3_0(req, res, next) {
    try {
      const price = await axios.get(
        "https://api.dexscreener.io/latest/dex/pairs/bsc/0xD454352eEeE4269f292404A7d99fb78c4d5CB55b"
      );
      const GGO_usd = price.data.pairs[0].priceUsd;
      const currency_value = 77.96;
      const GGO_inr = parseFloat(currency_value * GGO_usd);
      const today = new Date();
      let l1v = 5;
      let l2v = 4;
      let l3v = 3;
      let l4v = 2;
      let l5v = 1;
      let all = 0.5;
      const pageSize = req.body.limit ? parseInt(req.body.limit) : 10;
      const pageNumber = req.body.page ? parseInt(req.body.page) : 1;
      if (
        req.body.UserId == "635b651591a2d6ba72072375" ||
        req.body.UserId == "638087c821ae85da49abfff0" ||
        req.body.UserId == "6389f8aae953e34e89e5b411"
      ) {
        l1v = 12.5;
        l2v = 1;
        l3v = 1;
        l4v = 1;
        l5v = 1;
        all = 1;
      }
      const criteriaCountL1 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetails._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l1v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetails._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [5, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetails._id",
            referredby_firstname: "$referedDetails.fullname",
            referredby_email: "$referedDetails.email",
            referal_id: "$referedDetails.referal_id",
            rerenceList: [
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
            GGO_inr: "$ggo",
            today: today,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            users: { $first: "$deposit_logs_total" },
            ggo_coin: { $first: "$GGO_inr" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL1 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetails" },
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetails._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l1v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,

            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL2 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsData._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l2v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsData._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l2v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsData._id",
            today: "$day",
            referredby_firstname: "$referedDetailsData.fullname",
            referredby_email: "$referedDetailsData.email",
            rerenceList: [
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
        {
          $unwind: {
            path: "$deposit_logs_total",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $addFields: {
            totalamount_ggo: {
              $divide: ["$deposit_logs_total.totalamount", GGO_inr],
            },
            totalperamount_ggo: {
              $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
            },
            dif: {
              $round: [
                {
                  $divide: [
                    { $subtract: ["$today", "$deposit_logs_total.createdAt"] },
                    1000 * 60 * 60 * 24,
                  ],
                },
                0,
              ],
            },
          },
        },
        {
          $addFields: {
            diff: {
              $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
            },
          },
        },
        {
          $addFields: {
            user: {
              firstname: "$referredby_firstname",
              email: "$referredby_email",
              totalamount_ggo: "$totalamount_ggo",
              totalperamount_ggo: "$totalperamount_ggo",
              totalamount: "$deposit_logs_total.totalamount",
              totalperamount: "$deposit_logs_total.totalperamount",
              userstatus: {
                $cond: {
                  if: { $lte: ["$dif", 3] },
                  then: "active",
                  else: "inactive",
                },
              },
              days: "$diff",
              createdAt: "$deposit_logs_total.createdAt",
            },
          },
        },
        {
          $unset: [
            "diff",
            "dif",
            "totalamount_ggo",
            "totalperamount_ggo",
            "today",
            "ggo_coin",
            "deposit_logs_total",
            "referredby_email",
            "referredby_firstname",
          ],
        },
      ];
      const criteriaCountTotalL2 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        // {
        //   $addFields: {
        //     holders: { $size: "$referedDetails" },
        //   },
        // },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsData" },
          },
        },
        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsData._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l2v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL3 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            // preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL3._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l3v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL3._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l3v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $project: {
            id: "$referedDetailsDataL3._id",
            referredby_firstname: "$referedDetailsDataL3.fullname",
            referredby_email: "$referedDetailsDataL3.email",
            referal_id: "$referedDetailsDataL3.referal_id",
            rerenceList: [
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
            today: "$day",
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //  referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL3 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL3" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL3._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l3v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL4 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            // as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            //preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL4._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l4v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL4._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l4v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL4._id",
            referredby_firstname: "$referedDetailsDataL4.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL4.email",
            referal_id: "$referedDetailsDataL4.referal_id",
            rerenceList: [
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            // referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL4 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            //     localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            //  as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL4" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL4._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l4v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL5 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL5._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l5v, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL5._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l5v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL5._id",
            referredby_firstname: "$referedDetailsDataL5.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL5.email",
            referal_id: "$referedDetailsDataL5.referal_id",
            rerenceList: [
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL5 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            //     localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            //  as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL5" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL5._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [l5v, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL6 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL6._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL6._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL6._id",
            referredby_firstname: "$referedDetailsDataL6.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL6.email",
            referal_id: "$referedDetailsDataL6.referal_id",
            rerenceList: [
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountTotalL6 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            //     localField: "referedDetailsDataL3.referal_id",
            // foreignField: "refered_by",
            //  as: "referedDetailsDataL4",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        // {
        //   $addFields: {
        //     holders: { $size: "$referedDetailsDataL5" },
        //   },
        // },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL6" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL6._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL7 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            // localField: "referedDetailsDataL4.referal_id",
            // foreignField: "refered_by",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL7" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL7" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL7._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL8 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL8" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL8" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL8._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL9 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL9" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL9" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL9._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL10 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL10" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL10" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL10._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL11 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL11" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL11" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL11._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL12 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL12" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL12" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL12._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL13 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL12" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL13" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL13" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL13._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL14 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL12" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL13" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL14" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL14" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL14._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountTotalL15 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: { path: "$referedDetails" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },
        {
          $unwind: { path: "$referedDetailsData" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL3" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL4" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL5" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL6" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL7" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL8" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL9" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL10" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL11" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL12" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL13" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },

        {
          $unwind: { path: "$referedDetailsDataL14" },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL14.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL15",
          },
        },
        {
          $addFields: {
            holders: { $size: "$referedDetailsDataL15" },
          },
        },
        {
          $unwind: { path: "$referedDetailsDataL15" },
        },

        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL15._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        { $unwind: "$deposit_logs" },

        {
          $group: {
            _id: null,
            earnings_amount: {
              $sum: "$deposit_logs.peramount",
            },
            business_amount: {
              $sum: "$deposit_logs.amount",
            },
            holders: { $first: "$holders" },
          },
        },
        {
          $addFields: {
            earnings_ggo: {
              $divide: ["$earnings_amount", GGO_inr],
            },
            business_ggo: {
              $divide: ["$business_amount", GGO_inr],
            },
          },
        },
      ];
      const criteriaCountL7 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL7._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL7._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL7._id",
            referredby_firstname: "$referedDetailsDataL7.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL7.email",
            referal_id: "$referedDetailsDataL7.referal_id",
            rerenceList: [
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL8 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL8._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL8._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL8._id",
            referredby_firstname: "$referedDetailsDataL8.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL8.email",
            referal_id: "$referedDetailsDataL8.referal_id",
            rerenceList: [
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL9 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL9._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL9._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL9._id",
            referredby_firstname: "$referedDetailsDataL9.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL9.email",
            referal_id: "$referedDetailsDataL9.referal_id",
            rerenceList: [
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL10 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL10._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL10._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL10._id",
            referredby_firstname: "$referedDetailsDataL10.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL10.email",
            referal_id: "$referedDetailsDataL10.referal_id",
            rerenceList: [
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL11 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },

        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL11._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL11._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL11._id",
            referredby_firstname: "$referedDetailsDataL11.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL11.email",
            referal_id: "$referedDetailsDataL11.referal_id",
            rerenceList: [
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL12 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL12._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL12._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL12._id",
            referredby_firstname: "$referedDetailsDataL12.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL12.email",
            referal_id: "$referedDetailsDataL12.referal_id",
            rerenceList: [
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL13 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL13",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL13._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL13._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL13._id",
            referredby_firstname: "$referedDetailsDataL13.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL13.email",
            referal_id: "$referedDetailsDataL13.referal_id",
            rerenceList: [
              {
                leval: "l13",
                name: "$referedDetailsDataL12.fullname",
                email: "$referedDetailsDataL12.email",
                referred_id: "$referedDetailsDataL12.referal_id",
              },
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],

            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL14 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL13",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL14",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL14._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL14._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL14._id",
            referredby_firstname: "$referedDetailsDataL14.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL14.email",
            referal_id: "$referedDetailsDataL14.referal_id",
            rerenceList: [
              {
                leval: "l14",
                name: "$referedDetailsDataL13.fullname",
                email: "$referedDetailsDataL13.email",
                referred_id: "$referedDetailsDataL13.referal_id",
              },
              {
                leval: "l13",
                name: "$referedDetailsDataL12.fullname",
                email: "$referedDetailsDataL12.email",
                referred_id: "$referedDetailsDataL12.referal_id",
              },
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteriaCountL15 = [
        {
          $addFields: {
            id: { $toString: "$_id" },
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetails.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsData",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsData",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsData.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL3",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL3",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL3.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL4",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL4",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL4.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL5",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL5",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL5.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL6",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL6",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL6.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL7",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL7",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL7.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL8",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL8",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL8.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL9",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL9",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL9.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL10",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL10",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL10.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL11",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL11",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL11.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL12",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL12",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL12.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL13",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL13",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL13.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL14",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL14",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "users",
            let: { refer: "$referedDetailsDataL14.referal_id" },
            pipeline: [
              {
                $addFields: {
                  ref: { $toString: "$$refer" },
                  ref_id: { $toString: "$refered_by" },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $ne: ["$ref", null] }],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $and: [{ $eq: ["$ref", "$ref_id"] }],
                  },
                },
              },
            ],
            as: "referedDetailsDataL15",
          },
        },

        {
          $unwind: {
            path: "$referedDetailsDataL15",
            //  preserveNullAndEmptyArrays: true,
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL15._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [all, { $divide: ["$amount", 100] }],
                  },
                  amount: 1,
                  createdAt: 1,
                },
              },
              {
                $group: {
                  _id: null,
                  totalperamount: {
                    $sum: "$peramount",
                  },
                  totalamount: {
                    $sum: "$amount",
                  },
                  createdAt: { $last: "$createdAt" },
                },
              },
            ],
            as: "deposit_logs_total",
          },
        },
        {
          $lookup: {
            from: "depositlogs",
            let: { user_id: "$referedDetailsDataL15._id" },
            pipeline: [
              {
                $match: {
                  $expr: {
                    $and: [
                      { $eq: ["$userId", "$$user_id"] },
                      { $eq: ["$status", "Success"] },
                    ],
                  },
                },
              },
              {
                $match: {
                  $expr: {
                    $or: [
                      { $eq: ["$paymentType", "GGO-wallet"] },
                      { $eq: ["$paymentType", "GGO-ADMIN"] },
                      { $eq: ["$paymentType", "Reinvest"] },
                    ],
                  },
                },
              },
              {
                $project: {
                  peramount: {
                    $multiply: [1, { $divide: ["$amount", 100] }],
                  },
                  amount: "$amount",
                  paymentType: "$paymentType",
                  createdAt: 1,
                },
              },
            ],
            as: "deposit_logs",
          },
        },
        {
          $unwind: {
            path: "$deposit_logs",
            preserveNullAndEmptyArrays: true,
          },
        },
        {
          $project: {
            id: "$referedDetailsDataL15._id",
            referredby_firstname: "$referedDetailsDataL15.fullname",
            today: "$day",
            referredby_email: "$referedDetailsDataL15.email",
            referal_id: "$referedDetailsDataL15.referal_id",
            rerenceList: [
              {
                leval: "l15",
                name: "$referedDetailsDataL14.fullname",
                email: "$referedDetailsDataL14.email",
                referred_id: "$referedDetailsDataL14.referal_id",
              },
              {
                leval: "l14",
                name: "$referedDetailsDataL13.fullname",
                email: "$referedDetailsDataL13.email",
                referred_id: "$referedDetailsDataL13.referal_id",
              },
              {
                leval: "l13",
                name: "$referedDetailsDataL12.fullname",
                email: "$referedDetailsDataL12.email",
                referred_id: "$referedDetailsDataL12.referal_id",
              },
              {
                leval: "l12",
                name: "$referedDetailsDataL11.fullname",
                email: "$referedDetailsDataL11.email",
                referred_id: "$referedDetailsDataL11.referal_id",
              },
              {
                leval: "l11",
                name: "$referedDetailsDataL10.fullname",
                email: "$referedDetailsDataL10.email",
                referred_id: "$referedDetailsDataL10.referal_id",
              },
              {
                leval: "l10",
                name: "$referedDetailsDataL9.fullname",
                email: "$referedDetailsDataL9.email",
                referred_id: "$referedDetailsDataL9.referal_id",
              },
              {
                leval: "l9",
                name: "$referedDetailsDataL8.fullname",
                email: "$referedDetailsDataL8.email",
                referred_id: "$referedDetailsDataL8.referal_id",
              },
              {
                leval: "l8",
                name: "$referedDetailsDataL7.fullname",
                email: "$referedDetailsDataL7.email",
                referred_id: "$referedDetailsDataL7.referal_id",
              },
              {
                leval: "l7",
                name: "$referedDetailsDataL6.fullname",
                email: "$referedDetailsDataL6.email",
                referred_id: "$referedDetailsDataL6.referal_id",
              },
              {
                leval: "l6",
                name: "$referedDetailsDataL5.fullname",
                email: "$referedDetailsDataL5.email",
                referred_id: "$referedDetailsDataL5.referal_id",
              },
              {
                leval: "l5",
                name: "$referedDetailsDataL4.fullname",
                email: "$referedDetailsDataL4.email",
                referred_id: "$referedDetailsDataL4.referal_id",
              },
              {
                leval: "l4",
                name: "$referedDetailsDataL3.fullname",
                email: "$referedDetailsDataL3.email",
                referred_id: "$referedDetailsDataL3.referal_id",
              },
              {
                leval: "l3",
                name: "$referedDetailsData.fullname",
                email: "$referedDetailsData.email",
                referred_id: "$referedDetailsData.referal_id",
              },
              {
                leval: "l2",
                name: "$referedDetails.fullname",
                email: "$referedDetails.email",
                referred_id: "$referedDetails.referal_id",
              },
              {
                leval: "l1",
                name: "$fullname",
                email: "$email",
                referred_id: "$referal_id",
              },
            ],
            deposit_logs: 1,
            deposit_logs_total: 1,
          },
        },
        {
          $group: {
            _id: "$id",
            deposit_logs: { $push: "$deposit_logs" },
            referredby_firstname: { $first: "$referredby_firstname" },
            //referal_id: { $first: "$referal_id" },
            referredby_email: { $first: "$referredby_email" },
            rerenceList: { $first: "$rerenceList" },
            deposit_logs_total: { $first: "$deposit_logs_total" },
            today: { $first: "$today" },
          },
        },
      ];
      const criteria = [
        {
          $addFields: {
            id: { $toString: "$_id" },
            ggo: { $toDouble: GGO_inr },
            day: today,
          },
        },
        {
          $match: { id: req.body.UserId },
        },
        {
          $lookup: {
            from: "users",
            localField: "referal_id",
            foreignField: "refered_by",
            as: "referedDetails",
          },
        },
        {
          $unwind: {
            path: "$referedDetails",
            preserveNullAndEmptyArrays: true,
          },
        },
      ];
      if (req.body.layer == "l1") {
        criteria.splice(
          4,
          0,
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetails._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l1v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetails._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l1v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetails._id",
              referredby_firstname: "$referedDetails.fullname",
              referredby_email: "$referedDetails.email",
              referal_id: "$referedDetails.referal_id",
              rerenceList: [
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
              GGO_inr: "$ggo",
              today: today,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              users: { $first: "$deposit_logs_total" },
              ggo_coin: { $first: "$GGO_inr" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$users",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$users.totalamount", "$ggo_coin"],
              },
              totalperamount_ggo: {
                $divide: ["$users.totalperamount", "$ggo_coin"],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$users.totalamount",
                totalperamount: "$users.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "users",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l2") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsData._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l2v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsData._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l2v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsData._id",
              today: "$day",
              referredby_firstname: "$referedDetailsData.fullname",
              referredby_email: "$referedDetailsData.email",
              rerenceList: [
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l3") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              // preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL3._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l3v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL3._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l3v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },

          {
            $project: {
              id: "$referedDetailsDataL3._id",
              referredby_firstname: "$referedDetailsDataL3.fullname",
              referredby_email: "$referedDetailsDataL3.email",
              referal_id: "$referedDetailsDataL3.referal_id",
              rerenceList: [
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
              today: "$day",
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //  referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l4") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              // localField: "referedDetailsDataL3.referal_id",
              // foreignField: "refered_by",
              // as: "referedDetailsDataL4",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              //preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL4._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l4v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL4._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l4v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL4._id",
              referredby_firstname: "$referedDetailsDataL4.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL4.email",
              referal_id: "$referedDetailsDataL4.referal_id",
              rerenceList: [
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              // referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l5") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL5._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l5v, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL5._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [l5v, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL5._id",
              referredby_firstname: "$referedDetailsDataL5.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL5.email",
              referal_id: "$referedDetailsDataL5.referal_id",
              rerenceList: [
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l6") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL6._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL6._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL6._id",
              referredby_firstname: "$referedDetailsDataL6.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL6.email",
              referal_id: "$referedDetailsDataL6.referal_id",
              rerenceList: [
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l7") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL7._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL7._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL7._id",
              referredby_firstname: "$referedDetailsDataL7.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL7.email",
              referal_id: "$referedDetailsDataL7.referal_id",
              rerenceList: [
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l8") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL8._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL8._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL8._id",
              referredby_firstname: "$referedDetailsDataL8.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL8.email",
              referal_id: "$referedDetailsDataL8.referal_id",
              rerenceList: [
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l9") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL9._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL9._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL9._id",
              referredby_firstname: "$referedDetailsDataL9.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL9.email",
              referal_id: "$referedDetailsDataL9.referal_id",
              rerenceList: [
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l10") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL10._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL10._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL10._id",
              referredby_firstname: "$referedDetailsDataL10.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL10.email",
              referal_id: "$referedDetailsDataL10.referal_id",
              rerenceList: [
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l11") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL11._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL11._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL11._id",
              referredby_firstname: "$referedDetailsDataL11.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL11.email",
              referal_id: "$referedDetailsDataL11.referal_id",
              rerenceList: [
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l12") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL12._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL12._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL12._id",
              referredby_firstname: "$referedDetailsDataL12.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL12.email",
              referal_id: "$referedDetailsDataL12.referal_id",
              rerenceList: [
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l13") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL12.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL13",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL13",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL13._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL13._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL13._id",
              referredby_firstname: "$referedDetailsDataL13.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL13.email",
              referal_id: "$referedDetailsDataL13.referal_id",
              rerenceList: [
                {
                  leval: "l13",
                  name: "$referedDetailsDataL12.fullname",
                  email: "$referedDetailsDataL12.email",
                  referred_id: "$referedDetailsDataL12.referal_id",
                },
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],

              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l14") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL12.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL13",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL13",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL13.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL14",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL14",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL14._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL14._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL14._id",
              referredby_firstname: "$referedDetailsDataL14.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL14.email",
              referal_id: "$referedDetailsDataL14.referal_id",
              rerenceList: [
                {
                  leval: "l14",
                  name: "$referedDetailsDataL13.fullname",
                  email: "$referedDetailsDataL13.email",
                  referred_id: "$referedDetailsDataL13.referal_id",
                },
                {
                  leval: "l13",
                  name: "$referedDetailsDataL12.fullname",
                  email: "$referedDetailsDataL12.email",
                  referred_id: "$referedDetailsDataL12.referal_id",
                },
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }
      if (req.body.layer == "l15") {
        criteria.splice(
          7,
          0,
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetails.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsData",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsData",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsData.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL3",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL3",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL3.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL4",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL4",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL4.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL5",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL5",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL5.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL6",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL6",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL6.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL7",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL7",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL7.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL8",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL8",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL8.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL9",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL9",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL9.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL10",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL10",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL10.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL11",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL11",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL11.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL12",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL12",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL12.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL13",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL13",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL13.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL14",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL14",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "users",
              let: { refer: "$referedDetailsDataL14.referal_id" },
              pipeline: [
                {
                  $addFields: {
                    ref: { $toString: "$$refer" },
                    ref_id: { $toString: "$refered_by" },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $ne: ["$ref", null] }],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $and: [{ $eq: ["$ref", "$ref_id"] }],
                    },
                  },
                },
              ],
              as: "referedDetailsDataL15",
            },
          },

          {
            $unwind: {
              path: "$referedDetailsDataL15",
              //  preserveNullAndEmptyArrays: true,
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL15._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [all, { $divide: ["$amount", 100] }],
                    },
                    amount: 1,
                    createdAt: 1,
                  },
                },
                {
                  $group: {
                    _id: null,
                    totalperamount: {
                      $sum: "$peramount",
                    },
                    totalamount: {
                      $sum: "$amount",
                    },
                    createdAt: { $last: "$createdAt" },
                  },
                },
              ],
              as: "deposit_logs_total",
            },
          },
          {
            $lookup: {
              from: "depositlogs",
              let: { user_id: "$referedDetailsDataL15._id" },
              pipeline: [
                {
                  $match: {
                    $expr: {
                      $and: [
                        { $eq: ["$userId", "$$user_id"] },
                        { $eq: ["$status", "Success"] },
                      ],
                    },
                  },
                },
                {
                  $match: {
                    $expr: {
                      $or: [
                        { $eq: ["$paymentType", "GGO-wallet"] },
                        { $eq: ["$paymentType", "GGO-ADMIN"] },
                        { $eq: ["$paymentType", "Reinvest"] },
                      ],
                    },
                  },
                },
                {
                  $project: {
                    peramount: {
                      $multiply: [1, { $divide: ["$amount", 100] }],
                    },
                    amount: "$amount",
                    paymentType: "$paymentType",
                    createdAt: 1,
                  },
                },
              ],
              as: "deposit_logs",
            },
          },
          {
            $unwind: {
              path: "$deposit_logs",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $project: {
              id: "$referedDetailsDataL15._id",
              referredby_firstname: "$referedDetailsDataL15.fullname",
              today: "$day",
              referredby_email: "$referedDetailsDataL15.email",
              referal_id: "$referedDetailsDataL15.referal_id",
              rerenceList: [
                {
                  leval: "l15",
                  name: "$referedDetailsDataL14.fullname",
                  email: "$referedDetailsDataL14.email",
                  referred_id: "$referedDetailsDataL14.referal_id",
                },
                {
                  leval: "l14",
                  name: "$referedDetailsDataL13.fullname",
                  email: "$referedDetailsDataL13.email",
                  referred_id: "$referedDetailsDataL13.referal_id",
                },
                {
                  leval: "l13",
                  name: "$referedDetailsDataL12.fullname",
                  email: "$referedDetailsDataL12.email",
                  referred_id: "$referedDetailsDataL12.referal_id",
                },
                {
                  leval: "l12",
                  name: "$referedDetailsDataL11.fullname",
                  email: "$referedDetailsDataL11.email",
                  referred_id: "$referedDetailsDataL11.referal_id",
                },
                {
                  leval: "l11",
                  name: "$referedDetailsDataL10.fullname",
                  email: "$referedDetailsDataL10.email",
                  referred_id: "$referedDetailsDataL10.referal_id",
                },
                {
                  leval: "l10",
                  name: "$referedDetailsDataL9.fullname",
                  email: "$referedDetailsDataL9.email",
                  referred_id: "$referedDetailsDataL9.referal_id",
                },
                {
                  leval: "l9",
                  name: "$referedDetailsDataL8.fullname",
                  email: "$referedDetailsDataL8.email",
                  referred_id: "$referedDetailsDataL8.referal_id",
                },
                {
                  leval: "l8",
                  name: "$referedDetailsDataL7.fullname",
                  email: "$referedDetailsDataL7.email",
                  referred_id: "$referedDetailsDataL7.referal_id",
                },
                {
                  leval: "l7",
                  name: "$referedDetailsDataL6.fullname",
                  email: "$referedDetailsDataL6.email",
                  referred_id: "$referedDetailsDataL6.referal_id",
                },
                {
                  leval: "l6",
                  name: "$referedDetailsDataL5.fullname",
                  email: "$referedDetailsDataL5.email",
                  referred_id: "$referedDetailsDataL5.referal_id",
                },
                {
                  leval: "l5",
                  name: "$referedDetailsDataL4.fullname",
                  email: "$referedDetailsDataL4.email",
                  referred_id: "$referedDetailsDataL4.referal_id",
                },
                {
                  leval: "l4",
                  name: "$referedDetailsDataL3.fullname",
                  email: "$referedDetailsDataL3.email",
                  referred_id: "$referedDetailsDataL3.referal_id",
                },
                {
                  leval: "l3",
                  name: "$referedDetailsData.fullname",
                  email: "$referedDetailsData.email",
                  referred_id: "$referedDetailsData.referal_id",
                },
                {
                  leval: "l2",
                  name: "$referedDetails.fullname",
                  email: "$referedDetails.email",
                  referred_id: "$referedDetails.referal_id",
                },
                {
                  leval: "l1",
                  name: "$fullname",
                  email: "$email",
                  referred_id: "$referal_id",
                },
              ],
              deposit_logs: 1,
              deposit_logs_total: 1,
            },
          },
          {
            $group: {
              _id: "$id",
              deposit_logs: { $push: "$deposit_logs" },
              referredby_firstname: { $first: "$referredby_firstname" },
              //referal_id: { $first: "$referal_id" },
              referredby_email: { $first: "$referredby_email" },
              rerenceList: { $first: "$rerenceList" },
              deposit_logs_total: { $first: "$deposit_logs_total" },
              today: { $first: "$today" },
            },
          },
          {
            $unwind: {
              path: "$deposit_logs_total",
              preserveNullAndEmptyArrays: true,
            },
          },
          {
            $addFields: {
              totalamount_ggo: {
                $divide: ["$deposit_logs_total.totalamount", GGO_inr],
              },
              totalperamount_ggo: {
                $divide: ["$deposit_logs_total.totalperamount", GGO_inr],
              },
              dif: {
                $round: [
                  {
                    $divide: [
                      {
                        $subtract: ["$today", "$deposit_logs_total.createdAt"],
                      },
                      1000 * 60 * 60 * 24,
                    ],
                  },
                  0,
                ],
              },
            },
          },
          {
            $addFields: {
              diff: {
                $cond: { if: { $eq: ["$dif", null] }, then: 0, else: "$dif" },
              },
            },
          },
          {
            $addFields: {
              user: {
                firstname: "$referredby_firstname",
                email: "$referredby_email",
                totalamount_ggo: "$totalamount_ggo",
                totalperamount_ggo: "$totalperamount_ggo",
                totalamount: "$deposit_logs_total.totalamount",
                totalperamount: "$deposit_logs_total.totalperamount",
                userstatus: {
                  $cond: {
                    if: { $lte: ["$dif", 3] },
                    then: "active",
                    else: "inactive",
                  },
                },
                days: "$diff",
                createdAt: "$deposit_logs_total.createdAt",
              },
            },
          },
          {
            $unset: [
              "diff",
              "dif",
              "totalamount_ggo",
              "totalperamount_ggo",
              "today",
              "ggo_coin",
              "deposit_logs_total",
              "referredby_email",
              "referredby_firstname",
            ],
          },
          {
            $facet: {
              pagination: [
                { $count: "totalDocs" },
                { $addFields: { page: pageNumber } },
                { $addFields: { limit: pageSize } },
                { $addFields: { pagingCounter: pageNumber } },
              ],
              data: [
                { $skip: (pageNumber - 1) * pageSize },
                { $limit: pageSize },
              ], // add projection here wish you re-shape the docs
            },
          }
        );
      }

      let userList,
        l1 = [],
        l2 = [],
        l3 = [],
        l4 = [],
        l5 = [],
        l6 = [],
        l7 = [],
        l8 = [],
        l9 = [],
        l10 = [],
        l11 = [],
        l12 = [],
        l13 = [],
        l14 = [],
        l15 = [],
        criteriaCountTotalsL2 = [],
        criteriaCountTotalsL1 = [],
        criteriaCountTotalsL3 = [],
        criteriaCountTotalsL4 = [],
        criteriaCountTotalsL5 = [],
        criteriaCountTotalsL6 = [],
        criteriaCountTotalsL7 = [],
        criteriaCountTotalsL8 = [],
        criteriaCountTotalsL9 = [],
        criteriaCountTotalsL10 = [],
        criteriaCountTotalsL11 = [],
        criteriaCountTotalsL12 = [],
        criteriaCountTotalsL13 = [],
        criteriaCountTotalsL14 = [],
        criteriaCountTotalsL15 = [];
      userList = await userModel.aggregate(criteria);
      if (req.body.layer == "l1") {
        l1 = await userModel.aggregate(criteriaCountL1);
        criteriaCountTotalsL1 = await userModel.aggregate(criteriaCountTotalL1);
      }
      if (req.body.layer == "l2") {
        l2 = await userModel.aggregate(criteriaCountL2);
        criteriaCountTotalsL2 = await userModel.aggregate(criteriaCountTotalL2);
      }
      if (req.body.layer == "l3") {
        l3 = await userModel.aggregate(criteriaCountL3);
        criteriaCountTotalsL3 = await userModel.aggregate(criteriaCountTotalL3);
      }
      if (req.body.layer == "l4") {
        l4 = await userModel.aggregate(criteriaCountL4);
        criteriaCountTotalsL4 = await userModel.aggregate(criteriaCountTotalL4);
      }
      if (req.body.layer == "l5") {
        l5 = await userModel.aggregate(criteriaCountL5);
        criteriaCountTotalsL5 = await userModel.aggregate(criteriaCountTotalL5);
      }
      if (req.body.layer == "l6") {
        l6 = await userModel.aggregate(criteriaCountL6);
        criteriaCountTotalsL6 = await userModel.aggregate(criteriaCountTotalL6);
      }
      if (req.body.layer == "l7") {
        l7 = await userModel.aggregate(criteriaCountL7);
        criteriaCountTotalsL7 = await userModel.aggregate(criteriaCountTotalL7);
      }
      if (req.body.layer == "l8") {
        l8 = await userModel.aggregate(criteriaCountL8);
        criteriaCountTotalsL8 = await userModel.aggregate(criteriaCountTotalL8);
      }
      if (req.body.layer == "l9") {
        l9 = await userModel.aggregate(criteriaCountL9);
        criteriaCountTotalsL9 = await userModel.aggregate(criteriaCountTotalL9);
      }
      if (req.body.layer == "l10") {
        l10 = await userModel.aggregate(criteriaCountL10);
        criteriaCountTotalsL10 = await userModel.aggregate(
          criteriaCountTotalL10
        );
      }
      if (req.body.layer == "l11") {
        l11 = await userModel.aggregate(criteriaCountL11);
        criteriaCountTotalsL11 = await userModel.aggregate(
          criteriaCountTotalL11
        );
      }
      if (req.body.layer == "l12") {
        l12 = await userModel.aggregate(criteriaCountL12);
        criteriaCountTotalsL12 = await userModel.aggregate(
          criteriaCountTotalL12
        );
      }
      if (req.body.layer == "l13") {
        l13 = await userModel.aggregate(criteriaCountL13);
        criteriaCountTotalsL13 = await userModel.aggregate(
          criteriaCountTotalL13
        );
      }
      if (req.body.layer == "l14") {
        l14 = await userModel.aggregate(criteriaCountL14);
        criteriaCountTotalsL14 = await userModel.aggregate(
          criteriaCountTotalL14
        );
      }
      if (req.body.layer == "l15") {
        l15 = await userModel.aggregate(criteriaCountL15);
        criteriaCountTotalsL15 = await userModel.aggregate(
          criteriaCountTotalL15
        );
      }
      let L1 = l1.length != 0 ? l1.length : 0;
      let L2 = l2.length != 0 ? l2.length : 0;
      let L3 = l3.length != 0 ? l3.length : 0;
      let L4 = l4.length != 0 ? l4.length : 0;
      let L5 = l5.length != 0 ? l5.length : 0;
      let L6 = l6.length != 0 ? l6.length : 0;
      let L7 = l7.length != 0 ? l7.length : 0;
      let L8 = l8.length != 0 ? l8.length : 0;
      let L9 = l9.length != 0 ? l9.length : 0;
      let L10 = l10.length != 0 ? l10.length : 0;
      let L11 = l11.length != 0 ? l11.length : 0;
      let L12 = l12.length != 0 ? l12.length : 0;
      let L13 = l13.length != 0 ? l13.length : 0;
      let L14 = l14.length != 0 ? l14.length : 0;
      let L15 = l15.length != 0 ? l15.length : 0;

      let layerlength1 = criteriaCountTotalsL1.length != 0 ? 1 : 0;
      let layerlength2 = criteriaCountTotalsL2.length != 0 ? 1 : 0;
      let layerlength3 = criteriaCountTotalsL3.length != 0 ? 1 : 0;
      let layerlength4 = criteriaCountTotalsL4.length != 0 ? 1 : 0;
      let layerlength5 = criteriaCountTotalsL5.length != 0 ? 1 : 0;
      let layerlength6 = criteriaCountTotalsL6.length != 0 ? 1 : 0;
      let layerlength7 = criteriaCountTotalsL7.length != 0 ? 1 : 0;
      let layerlength8 = criteriaCountTotalsL8.length != 0 ? 1 : 0;
      let layerlength9 = criteriaCountTotalsL9.length != 0 ? 1 : 0;
      let layerlength10 = criteriaCountTotalsL10.length != 0 ? 1 : 0;
      let layerlength11 = criteriaCountTotalsL11.length != 0 ? 1 : 0;
      let layerlength12 = criteriaCountTotalsL12.length != 0 ? 1 : 0;
      let layerlength13 = criteriaCountTotalsL13.length != 0 ? 1 : 0;
      let layerlength14 = criteriaCountTotalsL14.length != 0 ? 1 : 0;
      let layerlength15 = criteriaCountTotalsL15.length != 0 ? 1 : 0;

      let layerCount =
        layerlength1 +
        layerlength2 +
        layerlength3 +
        layerlength4 +
        layerlength5 +
        layerlength6 +
        layerlength7 +
        layerlength8 +
        layerlength9 +
        layerlength10 +
        layerlength11 +
        layerlength12 +
        layerlength13 +
        layerlength14 +
        layerlength15;
      const main_count =
        L1 +
        L2 +
        L3 +
        L4 +
        L5 +
        L6 +
        L7 +
        L8 +
        L9 +
        L10 +
        L11 +
        L12 +
        L13 +
        L14 +
        L15;
      console.log("userList", userList);
      let output = {
        user_data_list: userList.length != 0 ? userList[0].data : 0,
        pagination: userList.length != 0 ? userList[0].pagination[0] : {},
        referal_id: userList.length != 0 ? userList[0].referal_id : "",
        count: main_count,
        layerCount: layerCount,
      };
      if (req.body.layer == "l1" && criteriaCountTotalsL1.length != 0) {
        output.business_crypto = criteriaCountTotalsL1[0].business_ggo;
        output.business_balance = criteriaCountTotalsL1[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL1[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL1[0].earnings_amount;
      }
      if (req.body.layer == "l2" && criteriaCountTotalsL2.length != 0) {
        output.business_crypto = criteriaCountTotalsL2[0].business_ggo;
        output.business_balance = criteriaCountTotalsL2[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL2[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL2[0].earnings_amount;
      }
      if (req.body.layer == "l3" && criteriaCountTotalsL3.length != 0) {
        output.business_crypto = criteriaCountTotalsL3[0].business_ggo;
        output.business_balance = criteriaCountTotalsL3[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL3[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL3[0].earnings_amount;
      }
      if (req.body.layer == "l4" && criteriaCountTotalsL4.length != 0) {
        output.business_crypto = criteriaCountTotalsL4[0].business_ggo;
        output.business_balance = criteriaCountTotalsL4[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL4[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL4[0].earnings_amount;
      }
      if (req.body.layer == "l5" && criteriaCountTotalsL5.length != 0) {
        output.business_crypto = criteriaCountTotalsL5[0].business_ggo;
        output.business_balance = criteriaCountTotalsL5[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL5[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL5[0].earnings_amount;
      }
      if (req.body.layer == "l6" && criteriaCountTotalsL6.length != 0) {
        output.business_crypto = criteriaCountTotalsL6[0].business_ggo;
        output.business_balance = criteriaCountTotalsL6[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL6[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL6[0].earnings_amount;
      }
      if (req.body.layer == "l7" && criteriaCountTotalsL7.length != 0) {
        output.business_crypto = criteriaCountTotalsL7[0].business_ggo;
        output.business_balance = criteriaCountTotalsL7[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL7[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL7[0].earnings_amount;
      }
      if (req.body.layer == "l8" && criteriaCountTotalsL8.length != 0) {
        output.business_crypto = criteriaCountTotalsL8[0].business_ggo;
        output.business_balance = criteriaCountTotalsL8[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL8[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL8[0].earnings_amount;
      }
      if (req.body.layer == "l9" && criteriaCountTotalsL9.length != 0) {
        output.business_crypto = criteriaCountTotalsL9[0].business_ggo;
        output.business_balance = criteriaCountTotalsL9[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL9[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL9[0].earnings_amount;
      }
      if (req.body.layer == "l10" && criteriaCountTotalsL10.length != 0) {
        output.business_crypto = criteriaCountTotalsL10[0].business_ggo;
        output.business_balance = criteriaCountTotalsL10[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL10[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL10[0].earnings_amount;
      }
      if (req.body.layer == "l11" && criteriaCountTotalsL11.length != 0) {
        output.business_crypto = criteriaCountTotalsL11[0].business_ggo;
        output.business_balance = criteriaCountTotalsL11[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL11[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL11[0].earnings_amount;
      }
      if (req.body.layer == "l12" && criteriaCountTotalsL12.length != 0) {
        output.business_crypto = criteriaCountTotalsL12[0].business_ggo;
        output.business_balance = criteriaCountTotalsL12[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL12[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL12[0].earnings_amount;
      }
      if (req.body.layer == "l13" && criteriaCountTotalsL13.length != 0) {
        output.business_crypto = criteriaCountTotalsL13[0].business_ggo;
        output.business_balance = criteriaCountTotalsL13[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL13[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL13[0].earnings_amount;
      }
      if (req.body.layer == "l14" && criteriaCountTotalsL14.length != 0) {
        output.business_crypto = criteriaCountTotalsL14[0].business_ggo;
        output.business_balance = criteriaCountTotalsL14[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL14[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL14[0].earnings_amount;
      }
      if (req.body.layer == "l15" && criteriaCountTotalsL15.length != 0) {
        output.business_crypto = criteriaCountTotalsL15[0].business_ggo;
        output.business_balance = criteriaCountTotalsL15[0].business_amount;
        output.earnings_crypto = criteriaCountTotalsL15[0].earnings_ggo;
        output.earnings_amount = criteriaCountTotalsL15[0].earnings_amount;
      }

      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },

  async update_data(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        const update_user = await userModel.findOneAndUpdate(
          { _id: req.body.UserId },
          {
            currency_type: req.body.currency_type,
            country_name: req.body.country_name,
            language: req.body.language,
            currency_country: true,
          },
          { new: true }
        );
        res.status(200).send({
          data: update_user,
          message: "country currency language are updated",
          status: 1,
          error: null,
        });
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in update data",
        status: 0,
      });
    }
  },

  async get_liquidity_data(req, res, next) {
    try {
      const pageSize = req.body.pageSize ? parseInt(req.body.pageSize) : 10;
      const pageNumber = req.body.pageNumber
        ? parseInt(req.body.pageNumber)
        : 1;
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        const liquidity_deposit_wallet = await paymentModel
          .findOne({ userId: find_user._id })
          .lean();
        const liquidity_nsr_wallet = await net_staking_walletModel
          .findOne({ UserId: find_user._id })
          .lean();
        const liquidity_interest_wallet = await interest_walletModel
          .findOne({ UserId: find_user._id })
          .lean();

        const find_nsr_withdraw = await net_staking_withdrawal_logModel
          .find({ userId: find_user._id, wallet_type: { $ne: "stake" } })
          .populate("deposit_id")
          .populate("reinvest_id")
          .lean();
        const find_interest_withdraw = await interest_withdraw_logModel
          .find({ userId: find_user._id, wallet_type: { $ne: "stake" } })
          .lean()
          .populate("deposit_id")
          .populate("reinvest_id");
        const R_I =
          parseFloat(liquidity_nsr_wallet.total_amount) +
          parseFloat(liquidity_interest_wallet.total_amount);
        var total_interest = 0;
        var total_rewards = 0;
        if (find_nsr_withdraw.length > 0) {
          for (let a = 0; a < find_nsr_withdraw.length; a++) {
            total_rewards =
              parseFloat(total_rewards) +
              parseFloat(find_nsr_withdraw[a].amount);
          }
        }
        if (find_interest_withdraw.length > 0) {
          for (let b = 0; b < find_interest_withdraw.length; b++) {
            total_interest =
              parseFloat(total_interest) +
              parseFloat(find_interest_withdraw[b].amount);
          }
        }
        const final_withdraw =
          parseFloat(total_interest) + parseFloat(total_rewards);
        const total_gain_amount = parseFloat(R_I) + parseFloat(final_withdraw);
        const per_to_gain =
          (parseFloat(total_gain_amount) * 100) /
          parseFloat(liquidity_deposit_wallet.total_amount);
        const price = await axios.get(
          "https://api.dexscreener.io/latest/dex/pairs/bsc/0xD454352eEeE4269f292404A7d99fb78c4d5CB55b"
        );
        console.log(price.data.pairs[0].priceUsd, "prices");
        const GGO_usd = price.data.pairs[0].priceUsd;
        const currency_value = 77.96;
        console.log(currency_value, "data");
        const GGO_inr = parseFloat(currency_value * GGO_usd);
        const total_gain_crypto =
          parseFloat(total_gain_amount) / parseFloat(GGO_inr);
        const R_I_crypto = parseFloat(R_I) / parseFloat(GGO_inr);
        const data1 =
          parseFloat(liquidity_deposit_wallet.crypto) * parseFloat(GGO_inr);
        console.log(data1, "data1");
        console.log(
          liquidity_deposit_wallet.total_amount,
          "liquidity_deposit_wallet.total_amount"
        );
        const profit =
          parseFloat(data1) - parseFloat(liquidity_deposit_wallet.total_amount);
        console.log(profit, "profit");
        const profit_crypto = parseFloat(profit) / parseFloat(GGO_inr);
        const profit_per =
          (parseFloat(profit) * 100) /
          parseFloat(liquidity_deposit_wallet.total_amount);
        console.log(profit_per, "profit_per");
        const crypto_nsr_wallet =
          parseFloat(liquidity_nsr_wallet.total_amount) / parseFloat(GGO_inr);
        const crypto_interest_wallet =
          parseFloat(liquidity_interest_wallet.total_amount) /
          parseFloat(GGO_inr);

        var find_deposit_logs;
        var find_interest_logs;
        var get_nsr_logs;
        var withdraw_logs;
        var total_withdrawal;
        var find_liquidity_interest_withdraws;
        var count;
        var get_reward_share_log;
        var get_reward_share_crypto;
        var get_reward_share_log1
        var reward_share_amounts = 0
        var reward_share_crypto = 0
        if (req.body.type == "liquidity_deposit_logs") {
          find_deposit_logs = await deposit_logModel
            .find({ userId: find_user._id, wallet_type: { $ne: "stake" } })
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          count = await deposit_logModel.countDocuments({
            userId: find_user._id,
            wallet_type: { $ne: "stake" },
          });
        } else if (req.body.type == "liquidity_interest_logs") {
          find_interest_logs = await interest_logModel
            .find({ UserId: find_user._id, wallet_type: { $ne: "stake" } })
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          count = await interest_logModel.countDocuments({
            UserId: find_user._id,
            wallet_type: { $ne: "stake" },
          });
          for (let j = 0; j < find_interest_logs.length; j++) {
            const crypto =
              parseFloat(find_interest_logs[j].intrest_amount) /
              parseFloat(GGO_inr);
            find_interest_logs[j].crypto = crypto;
          }
        } else if (req.body.type == "liquidity_nsr_withdraws") {
          get_nsr_logs = await reward_logs
            .find({ userId: find_user._id })
            .populate("userId")
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          count = await reward_logs.countDocuments({
            userId: find_user._id,
            wallet_type: { $ne: "stake" },
          });
          for (let i = 0; i < get_nsr_logs.length; i++) {
            const crypto =
              parseFloat(get_nsr_logs[i].added_rewards) / parseFloat(GGO_inr);
            get_nsr_logs[i].crypto = crypto;
            get_nsr_logs[i].ggo_coin = GGO_inr;
            get_nsr_logs[i].status = "Success";
          }
        } else if (req.body.type == "withdraw_logs") {
          withdraw_logs = await payoutModel
            .find({ UserId: find_user._id, status: { $ne: "Deducted" } })
            .populate("UserId")
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          count = await payoutModel.countDocuments({
            UserId: find_user._id,
            wallet_type: { $ne: "stake" },
          });
          for (let l = 0; l < withdraw_logs.length; l++) {
            const crypto =
              parseFloat(withdraw_logs[l].amount) / parseFloat(GGO_inr);
            withdraw_logs[l].crypto = crypto;
            withdraw_logs[l].token_price = GGO_inr;
          }
        } else if (req.body.type == "bank_withdraw") {
          const bank_withdraw = await bank_payoutModel
            .find({ UserId: find_user._id })
            .populate("UserId")
            .lean();
          const usdt_withdraw = await crypto_paymentsModel
            .find({ UserId: find_user._id })
            .populate("UserId")
            .lean();
          const p2p_withdraw = await p2p_withdrawModel
            .find({ UserId: find_user._id })
            .populate("UserId")
            .lean();
          const bank_usdt = bank_withdraw.concat(usdt_withdraw);
          total_withdrawal = bank_usdt.concat(p2p_withdraw);

          total_withdrawal.sort(function (a, b) {
            return (
              new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()
            );
          });
          var total_withdraw = total_withdrawal
            .slice((pageNumber - 1) * pageSize, pageNumber * pageSize)
            .sort();
          count = total_withdrawal.length;
          for (let l = 0; l < bank_withdraw.length; l++) {
            const crypto =
              parseFloat(bank_withdraw[l].withdrawal_amount) /
              parseFloat(GGO_inr);
            bank_withdraw[l].crypto = crypto;
            bank_withdraw[l].token_price = GGO_inr;
          }
          for (let l = 0; l < usdt_withdraw.length; l++) {
            const crypto =
              parseFloat(usdt_withdraw[l].withdrawal_amount) /
              parseFloat(GGO_inr);
            usdt_withdraw[l].crypto = crypto;
            usdt_withdraw[l].token_price = GGO_inr;
          }
          for (let l = 0; l < p2p_withdraw.length; l++) {
            const crypto =
              parseFloat(p2p_withdraw[l].withdrawal_amount) /
              parseFloat(GGO_inr);
            p2p_withdraw[l].crypto = crypto;
            p2p_withdraw[l].token_price = GGO_inr;
          }
        } else if (req.body.type == "liquidity_interest_withdraws") {
          find_liquidity_interest_withdraws = await interest_withdraw_logModel
            .find({ userId: find_user._id, wallet_type: { $ne: "stake" } })
            .lean()
            .populate("deposit_id")
            .populate("reinvest_id")
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          count = await interest_withdraw_logModel.countDocuments({
            userId: find_user._id,
            wallet_type: { $ne: "stake" },
          });
          for (let k = 0; k < find_liquidity_interest_withdraws.length; k++) {
            const crypto =
              parseFloat(find_liquidity_interest_withdraws[k].amount) /
              parseFloat(GGO_inr);
            find_liquidity_interest_withdraws[k].crypto = crypto;
          }

          var total_interest = 0;
          for (let a = 0; a < find_liquidity_interest_withdraws.length; a++) {
            total_interest =
              parseFloat(total_interest) +
              parseFloat(find_liquidity_interest_withdraws[a].amount);
          }
          console.log(total_interest, "total_interest");
        } else if (req.body.type == "reward_share_log") {
          get_reward_share_log1 = await reward_logsModel.find({ userId: req.body.UserId, reward_type: "reward share amount" }).lean().skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          
        } else {
          find_deposit_logs = await deposit_logModel
            .find({ userId: find_user._id, wallet_type: { $ne: "stake" } })
            .lean();

          find_interest_logs = await interest_logModel
            .find({ UserId: find_user._id, wallet_type: { $ne: "stake" } })
            .lean();
          for (let j = 0; j < find_interest_logs.length; j++) {
            const crypto =
              parseFloat(find_interest_logs[j].intrest_amount) /
              parseFloat(GGO_inr);
            find_interest_logs[j].crypto = crypto;
          }

          get_nsr_logs = await reward_logs
            .find({ userId: find_user._id })
            .populate("userId")
            .lean();
          for (let i = 0; i < get_nsr_logs.length; i++) {
            const crypto =
              parseFloat(get_nsr_logs[i].added_rewards) / parseFloat(GGO_inr);
            get_nsr_logs[i].crypto = crypto;
            get_nsr_logs[i].ggo_coin = GGO_inr;
            get_nsr_logs[i].status = "Success";
          }

          withdraw_logs = await payoutModel
            .find({ UserId: find_user._id, status: { $ne: "Deducted" } })
            .populate("UserId")
            .lean();
          for (let l = 0; l < withdraw_logs.length; l++) {
            const crypto =
              parseFloat(withdraw_logs[l].amount) / parseFloat(GGO_inr);
            withdraw_logs[l].crypto = crypto;
            withdraw_logs[l].token_price = GGO_inr;
          }

          const bank_withdraw = await bank_payoutModel
            .find({ UserId: find_user._id })
            .populate("UserId")
            .lean();
          const usdt_withdraw = await crypto_paymentsModel
            .find({ UserId: find_user._id })
            .populate("UserId")
            .lean();
          const p2p_withdraw = await p2p_withdrawModel
            .find({ UserId: find_user._id })
            .populate("UserId")
            .lean();
          const bank_usdt = bank_withdraw.concat(usdt_withdraw);
          var total_withdraw = bank_usdt.concat(p2p_withdraw);

          total_withdraw.sort(function (a, b) {
            return (
              new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()
            );
          });
          for (let l = 0; l < bank_withdraw.length; l++) {
            const crypto =
              parseFloat(bank_withdraw[l].withdrawal_amount) /
              parseFloat(GGO_inr);
            bank_withdraw[l].crypto = crypto;
            bank_withdraw[l].token_price = GGO_inr;
          }
          for (let l = 0; l < usdt_withdraw.length; l++) {
            const crypto =
              parseFloat(usdt_withdraw[l].withdrawal_amount) /
              parseFloat(GGO_inr);
            usdt_withdraw[l].crypto = crypto;
            usdt_withdraw[l].token_price = GGO_inr;
          }
          for (let l = 0; l < p2p_withdraw.length; l++) {
            const crypto =
              parseFloat(p2p_withdraw[l].withdrawal_amount) /
              parseFloat(GGO_inr);
            p2p_withdraw[l].crypto = crypto;
            p2p_withdraw[l].token_price = GGO_inr;
          }

          find_liquidity_interest_withdraws = await interest_withdraw_logModel
            .find({ userId: find_user._id, wallet_type: { $ne: "stake" } })
            .lean()
            .populate("deposit_id")
            .populate("reinvest_id");
          for (let k = 0; k < find_liquidity_interest_withdraws.length; k++) {
            const crypto =
              parseFloat(find_liquidity_interest_withdraws[k].amount) /
              parseFloat(GGO_inr);
            find_liquidity_interest_withdraws[k].crypto = crypto;
          }

          var total_interest = 0;
          for (let a = 0; a < find_liquidity_interest_withdraws.length; a++) {
            total_interest =
              parseFloat(total_interest) +
              parseFloat(find_liquidity_interest_withdraws[a].amount);
          }
          console.log(total_interest, "total_interest");
        }

        var total_nsr = 0;
        for (let b = 0; b < find_nsr_withdraw.length; b++) {
          total_nsr =
            parseFloat(total_nsr) + parseFloat(find_nsr_withdraw[b].amount);
        }
        console.log(total_nsr, "total_nsr");
        const burned = parseFloat(total_nsr) + parseFloat(total_interest);
        console.log(burned, "burned");
        const burned_crypto = parseFloat(burned) / parseFloat(GGO_inr);
        console.log(burned_crypto, "burned_crypto");
        const affiliate_wallet = await referral_walletModel.findOne({ userId: find_user._id })
          .lean();
        console.log()
        const referral_log = await referral_wallet_logModel.find({ userId: find_user._id })
          .populate("deposit_id").populate('reinvest_id').populate('bank_withdrawal_id').lean();
        var total_referral = 0;
        var total_reinvest_referral = 0;
        var total_bankpayout_referral = 0;

        for (let l = 0; l < referral_log.length; l++) {
          console.log("referral_log")
          if (referral_log[l].deposit_id) {
            if (
              referral_log[l].deposit_id.status == "processed" ||
              "processing" ||
              "Success" || "Deducted"
            ) {
              total_referral = total_referral + referral_log[l].amount;
            }
          }
          if (referral_log[l].reinvest_id) {
            if (referral_log[l].reinvest_id.status == "Success" || "Deducted") {
              total_reinvest_referral = total_reinvest_referral + referral_log[l].amount
            }
          }
          if (referral_log[l].bank_withdrawal_id) {
            if (referral_log[l].bank_withdrawal_id.status == "Success" || "Inprocess") {
              total_bankpayout_referral = total_bankpayout_referral + referral_log[l].amount
            }
          }
        }
        get_reward_share_log = await reward_logsModel.find({ userId: req.body.UserId, reward_type: "reward share amount" }).lean()
          get_reward_share_crypto = await reward_logsModel.find({ userId: req.body.UserId, reward_type: "reward share crypto" }).lean()

          for (let i = 0; i < get_reward_share_log.length; i++) {
            reward_share_amounts = reward_share_amounts + parseFloat(get_reward_share_log[i].final_amount)
          }
          for (let j = 0; j < get_reward_share_crypto.length; j++) {
            reward_share_crypto = reward_share_crypto + parseFloat(get_reward_share_crypto[j].final_amount)
          }
        res.status(200).send({
          message: "Getting Liquidity Data",
          data: {
            liquidity_stake_balance: liquidity_deposit_wallet.total_amount,
            liquidity_stake_crypto: liquidity_deposit_wallet.crypto,
            liquidity_reward_balance: liquidity_nsr_wallet.total_amount,
            liquidity_reward_crypto: crypto_nsr_wallet,
            liquidity_interest_balance: liquidity_interest_wallet.total_amount,
            liquidity_interest_crypto: crypto_interest_wallet,
            R_I: R_I,
            R_I_crypto: R_I_crypto,
            per_to_gain: per_to_gain,
            per_to_gain_crypto: total_gain_crypto,
            burned: burned,
            burned_crypto: burned_crypto,
            quote_console: {
              quantity: liquidity_deposit_wallet.total_amount,
              quantity_crypto: liquidity_deposit_wallet.crypto,
              profit_crypto: profit_crypto,
              profit_per: profit_per,
              burned: burned,
              burned_crypto: burned_crypto,
            },
            liquidity_deposit_logs: find_deposit_logs,
            liquidity_nsr_withdraws: get_nsr_logs,
            liquidity_interest_logs: find_interest_logs,
            liquidity_interest_withdraws: find_liquidity_interest_withdraws,
            withdraw_logs: withdraw_logs,
            bank_withdraw: total_withdraw,
            count: count,
            reward_share_amounts: reward_share_amounts,
            reward_share_log: get_reward_share_log1,
            reward_share_crypto: reward_share_crypto,
            current_affiliate_balance: affiliate_wallet.total_amount,
            affiliate_income_till_date: parseFloat(total_referral) + parseFloat(affiliate_wallet.total_amount) +
              parseFloat(total_reinvest_referral) + parseFloat(total_bankpayout_referral)
          },
          error: null,
          status: 1,
        });
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in get liquidity data",
        status: 0,
      });
    }
  },

  async get_stake_data(req, res, next) {
    try {
      const pageSize = req.body.pageSize ? parseInt(req.body.pageSize) : 10;
      const pageNumber = req.body.pageNumber
        ? parseInt(req.body.pageNumber)
        : 1;
      const user = await userModel.findOne({ _id: req.body.UserId });
      if (user) {
        var per_to_gain = 0;
        const stake_deposit_wallet = await stake_deposit_walletModel
          .findOne({ userId: user._id })
          .lean();
        const stake_nsr_wallet = await stake_nsr_walletModel
          .findOne({ UserId: user._id })
          .lean();
        const stake_interest_wallet = await stake_interest_walletModel
          .findOne({ UserId: user._id })
          .lean();
        const R_I =
          parseFloat(stake_nsr_wallet.total_amount) +
          parseFloat(stake_interest_wallet.total_amount);
        const get_interest_log = await interest_withdraw_logModel
          .find({ userId: user._id, wallet_type: "stake" })
          .lean();
        const find_stake_nsr_log = await net_staking_withdrawal_logModel
          .find({ userId: user._id, wallet_type: "stake" })
          .populate("deposit_id")
          .populate("reinvest_id")
          .lean();
        var interest_total = 0;
        var rewards_total = 0;
        if (find_stake_nsr_log.length > 0) {
          for (let r = 0; r < find_stake_nsr_log.length; r++) {
            rewards_total =
              parseFloat(rewards_total) +
              parseFloat(find_stake_nsr_log[r].amount);
          }
        }
        if (get_interest_log.length > 0) {
          for (let i = 0; i < get_interest_log.length; i++) {
            interest_total =
              parseFloat(interest_total) +
              parseFloat(get_interest_log[i].amount);
          }
        }
        const total_wallets =
          parseFloat(interest_total) + parseFloat(rewards_total);
        const total_gain_amount = parseFloat(R_I) + parseFloat(total_wallets);
        if (stake_deposit_wallet.total_amount == 0) {
          per_to_gain = 0;
          console.log(per_to_gain, "per_to_gain");
        } else {
          per_to_gain =
            (parseFloat(total_gain_amount) * 100) /
            parseFloat(stake_deposit_wallet.total_amount);
          console.log(per_to_gain, "per_to_gain");
        }
        const price = await axios.get(
          "https://api.dexscreener.io/latest/dex/pairs/bsc/0xD454352eEeE4269f292404A7d99fb78c4d5CB55b"
        );
        console.log(price.data.pairs[0].priceUsd, "prices");
        const GGO_usd = price.data.pairs[0].priceUsd;
        const currency_value = 77.96;
        console.log(currency_value, "data");
        const GGO_inr = parseFloat(currency_value * GGO_usd);
        const R_I_crypto = parseFloat(R_I) / parseFloat(GGO_inr);
        console.log(R_I_crypto, "R_I_crypto");
        const total_gain_crypto =
          parseFloat(total_gain_amount) / parseFloat(GGO_inr);
        const data1 =
          parseFloat(stake_deposit_wallet.crypto) * parseFloat(GGO_inr);
        console.log(data1, "data1");
        var profit = 0;
        var profit_per = 0;
        profit =
          parseFloat(data1) - parseFloat(stake_deposit_wallet.total_amount);
        console.log(profit, "profit");
        const profit_crypto = parseFloat(profit) / parseFloat(GGO_inr);
        profit_per =
          (parseFloat(profit) * 100) /
          parseFloat(stake_deposit_wallet.total_amount);
        console.log(profit_per, "profit_per");
        if (profit < 0) {
          profit = 0;
          profit_per = 0;
        } else if (profit > 0) {
          console.log(profit);
        } else {
          profit = 0;
          profit_per = 0;
        }
        console.log(profit, "profit");
        console.log(profit_per, "profit_per");
        const crypto_nsr_wallet =
          parseFloat(stake_nsr_wallet.total_amount) / parseFloat(GGO_inr);
        const crypto_interest_wallet =
          parseFloat(stake_interest_wallet.total_amount) / parseFloat(GGO_inr);
        var find_stake_depositlog;
        var find_stake_interest_withdraws;
        var find_stake_interestLog;
        var get_stake_reward_log;

        if (req.body.type == "stake_depositLog") {
          find_stake_depositlog = await deposit_logModel
            .find({ userId: user._id, wallet_type: "stake" })
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          var count = await deposit_logModel.countDocuments({
            userId: user._id,
            wallet_type: "stake",
          });
        } else if (req.body.type == "stake_interest_withdraws") {
          find_stake_interest_withdraws = await interest_withdraw_logModel
            .find({ userId: user._id, wallet_type: "stake" })
            .populate("deposit_id")
            .populate("reinvest_id")
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          var count = await interest_withdraw_logModel.countDocuments({
            userId: user._id,
            wallet_type: "stake",
          });
          for (let i = 0; i < find_stake_interest_withdraws.length; i++) {
            const crypto =
              parseFloat(find_stake_interest_withdraws[i].amount) /
              parseFloat(GGO_inr);
            find_stake_interest_withdraws[i].crypto = crypto;
          }
          var total_interest = 0;
          if (find_stake_interest_withdraws.length > 0) {
            for (let a = 0; a < find_stake_interest_withdraws.length; a++) {
              total_interest =
                parseFloat(total_interest) +
                parseFloat(find_stake_interest_withdraws[a].amount);
            }
          }
          console.log(total_interest, "total_interest");
        } else if (req.body.type == "stake_interestlog") {
          find_stake_interestLog = await interest_logModel
            .find({ UserId: user._id, wallet_type: "stake" })
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          var count = await interest_logModel.countDocuments({
            UserId: user._id,
            wallet_type: "stake",
          });
          for (let j = 0; j < find_stake_interestLog.length; j++) {
            const crypto =
              parseFloat(find_stake_interestLog[j].intrest_amount) /
              parseFloat(GGO_inr);
            find_stake_interestLog[j].crypto = crypto;
          }
        } else if (req.body.type == "stake_nsr_withdrawlog") {
          get_stake_reward_log = await stake_reward_logsModel
            .find({ userId: user._id })
            .populate("userId")
            .lean()
            .skip((pageNumber - 1) * pageSize)
            .limit(pageSize)
            .sort({ _id: -1 });
          var count = await stake_reward_logsModel.countDocuments({
            userId: user._id,
          });
          for (let k = 0; k < get_stake_reward_log.length; k++) {
            const crypto =
              parseFloat(get_stake_reward_log[k].added_rewards) /
              parseFloat(GGO_inr);
            get_stake_reward_log[k].crypto = crypto;
            get_stake_reward_log[k].ggo_coin = GGO_inr;
            get_stake_reward_log[k].status = "Success";
          }
        } else {
          find_stake_depositlog = await deposit_logModel
            .find({ userId: user._id, wallet_type: "stake" })
            .lean();

          find_stake_interest_withdraws = await interest_withdraw_logModel
            .find({ userId: user._id, wallet_type: "stake" })
            .populate("deposit_id")
            .populate("reinvest_id")
            .lean();
          for (let i = 0; i < find_stake_interest_withdraws.length; i++) {
            const crypto =
              parseFloat(find_stake_interest_withdraws[i].amount) /
              parseFloat(GGO_inr);
            find_stake_interest_withdraws[i].crypto = crypto;
          }
          var total_interest = 0;
          if (find_stake_interest_withdraws.length > 0) {
            for (let a = 0; a < find_stake_interest_withdraws.length; a++) {
              total_interest =
                parseFloat(total_interest) +
                parseFloat(find_stake_interest_withdraws[a].amount);
            }
          }
          console.log(total_interest, "total_interest");

          find_stake_interestLog = await interest_logModel
            .find({ UserId: user._id, wallet_type: "stake" })
            .lean();
          for (let j = 0; j < find_stake_interestLog.length; j++) {
            const crypto =
              parseFloat(find_stake_interestLog[j].intrest_amount) /
              parseFloat(GGO_inr);
            find_stake_interestLog[j].crypto = crypto;
          }

          get_stake_reward_log = await stake_reward_logsModel
            .find({ userId: user._id })
            .populate("userId")
            .lean();
          for (let k = 0; k < get_stake_reward_log.length; k++) {
            const crypto =
              parseFloat(get_stake_reward_log[k].added_rewards) /
              parseFloat(GGO_inr);
            get_stake_reward_log[k].crypto = crypto;
            get_stake_reward_log[k].ggo_coin = GGO_inr;
            get_stake_reward_log[k].status = "Success";
          }
        }
        var total_nsr = 0;
        if (find_stake_nsr_log.length > 0) {
          for (let b = 0; b < find_stake_nsr_log.length; b++) {
            total_nsr =
              parseFloat(total_nsr) + parseFloat(find_stake_nsr_log[b].amount);
          }
        }
        console.log(total_nsr, "total_nsr");
        const burned = parseFloat(total_nsr) + parseFloat(total_interest);
        console.log(burned, "burned");
        const burned_crypto = parseFloat(burned) / parseFloat(GGO_inr);
        console.log(burned_crypto, "burned_crypto");

        res.status(200).send({
          data: {
            stake_deposit_balance: stake_deposit_wallet.total_amount,
            stake_crypto: stake_deposit_wallet.crypto,
            stake_reward_balance: stake_nsr_wallet.total_amount,
            stake_reward_crypto: crypto_nsr_wallet,
            stake_interest_balance: stake_interest_wallet.total_amount,
            stake_interest_crypto: crypto_interest_wallet,
            R_I: R_I,
            R_I_crypto: R_I_crypto,
            per_to_gain: per_to_gain,
            per_to_gain_crypto: total_gain_crypto,
            burned: burned,
            burned_crypto: burned_crypto,
            quote_console: {
              quantity: stake_deposit_wallet.total_amount,
              quantity_crypto: stake_deposit_wallet.crypto,
              profit_crypto: profit_crypto,
              profit_per: profit_per,
              burned: burned,
              burned_crypto: burned_crypto,
            },
            stake_depositLog: find_stake_depositlog,
            stake_interest_withdraws: find_stake_interest_withdraws,
            stake_interestlog: find_stake_interestLog,
            stake_nsr_withdrawlog: get_stake_reward_log,
            count: count,
          },
          message: "getting stake data",
          error: null,
          status: 1,
        });
      } else {
        res.status(200).send({
          data: null,
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        data: null,
        error: error,
        message: "error in  getting stake data",
        status: 0,
      });
    }
  },

  async createcountry(req, res, next) {
    try {
      const country = new countryModel();
      country.countryName = req.body.countryName;
      const create_country = await countryModel.create(country);
      res.status(200).send({
        data: create_country,
        status: 1,
        message: "country created successfully",
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        status: 0,
        message: "error in create country name",
      });
    }
  },

  async getcountry(req, res, next) {
    try {
      const country = await countryModel.find();
      const count = await countryModel.countDocuments();
      res.status(200).send({
        data: { country: country, count: count },
        status: 1,
        message: "country getting successfully",
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        status: 0,
        message: "error in getting country",
      });
    }
  },

  async createreview(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        const review = new reviewModel();
        review.userId = req.body.userId;
        review.message = req.body.message;
        const create_review = await reviewModel.create(review);
        res.status(200).send({
          data: create_review,
          status: 1,
          message: "review created successfully",
        });
      } else {
        res.status(200).send({
          message: "User not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        status: 0,
        message: "error in create review",
      });
    }
  },

  async getreviews(req, res, next) {
    try {
      const reviews = await reviewModel.find();
      const count = await reviewModel.countDocuments();
      res.status(200).send({
        data: { reviews: reviews, count: count },
        status: 1,
        message: "reviews getting successfully",
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        status: 0,
        message: "error in getting reviews",
      });
    }
  },

  async kyc_update(req, res, next) {
    try {
      const get_data = await userModel.find().lean();
      for (let i = 0; i < get_data.length; i++) {
        const schema = new reward_share_walletModel();
        schema.userId = get_data[i]._id;
        schema.total_amount = 0;
        schema.save();
        console.log(i, "data");
      }
      res.status(200).send({
        data: get_data,
        message: "kyc update",
        status: 1,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in kyc update",
        status: 0,
      });
    }
  },

  async get_user_update(req, res, next) {
    try {
      const get_users = await userModel
        .findOne({ _id: req.body.userId })
        .lean();
      if (get_users._id != "62b44e566435715b72b004ac") {
        console.log("if");
      } else {
        console.log("else");
      }
      // var amount =0;
      // var crypto = 0
      // for(let i=0;i<get_users.length;i++){
      //   amount = parseFloat(amount) + parseFloat(get_users[i].amount);
      //   crypto = parseFloat(crypto) + parseFloat(get_users[i].crypto)
      // }
      // if(get_users._id == '633ac010ff0962794cc9851d'|| get_users._id =='635b651591a2d6ba72072375'){
      //   console.log("getting")
      // }
      // for(let i=0;i<get_users.length;i++){
      //   console.log("data",i)
      //     const update_user = await userModel.findOneAndUpdate({_id:get_users[i]._id},{currency_country:true},{new:true}).lean();

      // }
      res.send({ get_users });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in user update",
        status: 0,
      });
    }
  },

  async user_status(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        res.status(200).send({
          data: {
            first_deposit: find_user.first_deposit,
            number_verify: find_user.number_verify,
            email_verify: find_user.email_verify,
            kycVerified: find_user.kycVerified,
          },
          message: "get user status",
          status: 1,
        });
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in user status",
        status: 0,
      });
    }
  },

  async reward_share_wallet(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        const get_level_1 = await axios.post(
          "https://pearl.ggo.digital/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l1",
          }
        );
        console.log(get_level_1.data, "get data");
        const get_level_2 = await axios.post(
          "https://pearl.ggo.digital/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l2",
          }
        );
        console.log(get_level_2.data, "get data");
        const get_level_3 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l3",
          }
        );
        console.log(get_level_3.data, "get data");
        const get_level_4 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l4",
          }
        );
        console.log(get_level_4.data, "get data");
        const get_level_5 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l5",
          }
        );
        console.log(get_level_5.data, "get data");
        const get_level_6 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l6",
          }
        );
        console.log(get_level_6.data, "get data");
        const get_level_7 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l7",
          }
        );
        console.log(get_level_7.data, "get data");
        const get_level_8 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l8",
          }
        );
        console.log(get_level_8.data, "get data");
        const get_level_9 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l9",
          }
        );
        console.log(get_level_9.data, "get data");
        const get_level_10 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l10",
          }
        );
        console.log(get_level_10.data, "get data");
        const get_level_11 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l11",
          }
        );
        console.log(get_level_11.data, "get data");
        const get_level_12 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l2",
          }
        );
        console.log(get_level_12.data, "get data");
        const get_level_13 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l13",
          }
        );
        console.log(get_level_13.data, "get data");
        const get_level_14 = await axios.post(
          "http://localhost:7325/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l14",
          }
        );
        console.log(get_level_14.data, "get data");
        const total_amount =
          parseFloat(get_level_1.data.data.business_balance) +
          parseFloat(get_level_2.data.data.business_balance) +
          parseFloat(get_level_3.data.data.business_balance) +
          parseFloat(get_level_4.data.data.business_balance) +
          parseFloat(get_level_5.data.data.business_balance) +
          parseFloat(get_level_6.data.data.business_balance) +
          parseFloat(get_level_7.data.data.business_balance) +
          parseFloat(get_level_8.data.data.business_balance) +
          parseFloat(get_level_9.data.data.business_balance) +
          parseFloat(get_level_10.data.data.business_balance) +
          parseFloat(get_level_11.data.data.business_balance) +
          parseFloat(get_level_12.data.data.business_balance) +
          parseFloat(get_level_13.data.data.business_balance) +
          parseFloat(get_level_14.data.data.business_balance);
        console.log(total_amount, "total_amount");
        res.status(200).send({
          data: total_amount,
          message: "reward share wallet data",
          status: 1,
        });
      } else {
        res.status(200).send({
          data: null,
          message: "user not found",
          status: 0,
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in referral",
        status: 0,
      });
    }
  },

  async achivement_referral(req, res, next) {
    try {
      const find_user = await userModel
        .findOne({ _id: req.body.UserId })
        .lean();
      if (find_user) {
        const find_referral_count = await userModel.countDocuments({
          refered_by: find_user.referal_id,
        });
        console.log(find_referral_count, "find_referral_count");
        const referral1 = await axios.post(
          "https://pearl.ggo.digital/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l1",
          }
        );
        const referral2 = await axios.post(
          "https://pearl.ggo.digital/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l2",
          }
        );
        const referral3 = await axios.post(
          "https://pearl.ggo.digital/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l3",
          }
        );
        const referral4 = await axios.post(
          "https://pearl.ggo.digital/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l4",
          }
        );
        const referral5 = await axios.post(
          "https://pearl.ggo.digital/api/v1/user/referral_2_0",
          {
            UserId: find_user._id,
            layer: "l5",
          }
        );
        let [
          referraldata1,
          referraldata2,
          referraldata3,
          referraldata4,
          referraldata5,
        ] = await Promise.all([
          referral1,
          referral2,
          referral3,
          referral4,
          referral5,
        ]);

        console.log(
          referraldata1.data.data.business_balance,
          "1",
          referraldata2.data.data.business_balance,
          "2",
          referraldata3.data.data.business_balance,
          "3",
          referraldata4.data.data.business_balance,
          "4",
          referraldata5.data.data.business_balance,
          "5",
          find_referral_count,
          "find_referral_count"
        );
        let L1 = referraldata1.data.data.business_balance
          ? referraldata1.data.data.business_balance
          : 0;
        let L2 = referraldata2.data.data.business_balance
          ? referraldata2.data.data.business_balance
          : 0;
        let L3 = referraldata3.data.data.business_balance
          ? referraldata3.data.data.business_balance
          : 0;
        let L4 = referraldata4.data.data.business_balance
          ? referraldata4.data.data.business_balance
          : 0;
        let L5 = referraldata5.data.data.business_balance
          ? referraldata5.data.data.business_balance
          : 0;
        console.log(L1, "l1", L2, "l2", L3, "l3", L4, "l4", L5, "L5");
        const total_amount =
          parseFloat(L1) +
          parseFloat(L2) +
          parseFloat(L3) +
          parseFloat(L4) +
          parseFloat(L5);
        console.log(total_amount, "total_amount");
        if (total_amount >= 100000000 && find_referral_count >= 12) {
          res.send({
            data: {
              total_amount: total_amount,
              find_referral_count: find_referral_count,
              amount: 100000000,
              current_place: "Badshah",
              total_level: 18,
              current_level: 18,
              direct: 12,
              unlocked: [
                "Executive",
                "Soldier I",
                "Soldier II",
                "Emerald I",
                "Emerald II",
                "Emerald III",
                "Ruby I",
                "Ruby II",
                "Captain",
                "Lieutenant",
                "Lieutenant II",
                "Lieutenant III",
                "Diamond",
                "Blue Diamond",
                "Black Diamond",
                "Crown Diamond",
                "National Promoter",
              ],
              locked: [],
            },
            status: 1,
            message: "get achivement data",
          });
        } else if (total_amount >= 50000000 && find_referral_count >= 10) {
          res.send({
            data: {
              total_amount: total_amount,
              find_referral_count: find_referral_count,
              amount: 50000000,
              current_place: "National Promoter",
              total_level: 18,
              current_level: 17,
              direct: 10,
              unlocked: [
                "Executive",
                "Soldier I",
                "Soldier II",
                "Emerald I",
                "Emerald II",
                "Emerald III",
                "Ruby I",
                "Ruby II",
                "Captain",
                "Lieutenant",
                "Lieutenant II",
                "Lieutenant III",
                "Diamond",
                "Blue Diamond",
                "Black Diamond",
                "Crown Diamond",
              ],
              locked: ["Badshah"],
            },
            status: 1,
            message: "get achivement data",
          });
        } else if (total_amount >= 10000000 && find_referral_count >= 8) {
          res.send({
            data: {
              total_amount: total_amount,
              find_referral_count: find_referral_count,
              amount: 10000000,
              current_place: "Crown Diamond",
              total_level: 18,
              current_level: 16,
              direct: 8,
              unlocked: [
                "Executive",
                "Soldier I",
                "Soldier II",
                "Emerald I",
                "Emerald II",
                "Emerald III",
                "Ruby I",
                "Ruby II",
                "Captain",
                "Lieutenant",
                "Lieutenant II",
                "Lieutenant III",
                "Diamond",
                "Blue Diamond",
                "Black Diamond",
              ],
              locked: ["National Promoter", "Badshah"],
            },
            status: 1,
            message: "get achivement data",
          });
        } else if (total_amount >= 5000000 && find_referral_count >= 6) {
          res.send({
            data: {
              total_amount: total_amount,
              find_referral_count: find_referral_count,
              amount: 5000000,
              current_place: "Black Diamond",
              total_level: 18,
              current_level: 15,
              direct: 6,
              unlocked: [
                "Executive",
                "Soldier I",
                "Soldier II",
                "Emerald I",
                "Emerald II",
                "Emerald III",
                "Ruby I",
                "Ruby II",
                "Captain",
                "Lieutenant",
                "Lieutenant II",
                "Lieutenant III",
                "Diamond",
                "Blue Diamond",
              ],
              locked: ["Crown Diamond", "National Promoter", "Badshah"],
            },
            status: 1,
            message: "get achivement data",
          });
        } else if (total_amount >= 2500000 && find_referral_count >= 4) {
          res.send({
            data: {
              total_amount: total_amount,
              find_referral_count: find_referral_count,
              amount: 2500000,
              current_place: "Lieutenant",
              total_level: 18,
              current_level: 10,
              direct: 4,
              unlocked: [
                "Executive",
                "Soldier I",
                "Soldier II",
                "Emerald I",
                "Emerald II",
                "Emerald III",
                "Ruby I",
                "Ruby II",
                "Captain",
              ],
              locked: [
                "Lieutenant II",
                "Lieutenant III",
                "Diamond",
                "Blue Diamond",
                "Black Diamond",
                "Crown Diamond",
                "National Promoter",
                "Badshah",
              ],
            },
            status: 1,
            message: "get achivement data",
          });
        } else if (total_amount >= 500000 && find_referral_count >= 2) {
          res.send({
            data: {
              total_amount: total_amount,
              find_referral_count: find_referral_count,
              amount: 500000,
              current_place: "Emerald I",
              total_level: 18,
              current_level: 4,
              direct: 2,
              unlocked: ["Executive", "Soldier I", "Soldier II"],
              locked: [
                "Emerald II",
                "Emerald III",
                "Ruby I",
                "Ruby II",
                "Captain",
                "Lieutenant",
                "Lieutenant II",
                "Lieutenant III",
                "Diamond",
                "Blue Diamond",
                "Black Diamond",
                "Crown Diamond",
                "National Promoter",
                "Badshah",
              ],
            },
            status: 1,
            message: "get achivement data",
          });
        } else {
          res.send({
            data: {
              total_amount: total_amount,
              find_referral_count: find_referral_count,
              amount: 500000,
              current_place: "Executive",
              total_level: 18,
              current_level: 1,
              direct: 0,
              unlocked: [],
              locked: [
                "Soldier I",
                "Soldier II",
                "Emerald I",
                "Emerald II",
                "Emerald III",
                "Ruby I",
                "Ruby II",
                "Captain",
                "Lieutenant",
                "Lieutenant II",
                "Lieutenant III",
                "Diamond",
                "Blue Diamond",
                "Black Diamond",
                "Crown Diamond",
                "National Promoter",
                "Badshah",
              ],
            },
            status: 1,
            message: "get achivement data",
          });
        }
      } else {
        res.status(200).send({
          data: null,
          status: 0,
          message: "user not found",
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in achivement referral",
        status: 0,
      });
    }
  },

  async add_BankAccount(req, res, next) {
    try {
      const find_user = await add_bankAccountModel
        .find({ UserId: req.body.UserId })
        .lean();
      console.log(find_user, "user");
      if (find_user.length != 0) {
        console.log("juhjio");
        if (find_user.length < 2) {
          const schema = new add_bankAccountModel(req.body);
          const create_account = await add_bankAccountModel.create(schema);
          res.status(200).send({
            data: create_account,
            status: 1,
            error: null,
            message: "Created another bank account to this user Successfully",
          });
        } else {
          res.status(200).send({
            data: null,
            status: 0,
            error: null,
            message: "Already 2 bank accounts created",
          });
        }
      } else {
        const schema = new add_bankAccountModel(req.body);
        const create_account = await add_bankAccountModel.create(schema);
        res.status(200).send({
          data: create_account,
          status: 1,
          error: null,
          message: "Created bank account to this user Successfully",
        });
      }
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in creating bankAccount",
        status: 0,
        data: null,
      });
    }
  },

  async get_addBankAccount(req, res, next) {
    try {
      const get_user = await add_bankAccountModel
        .find({ UserId: req.query.UserId })
        .lean();
      console.log(get_user, "user");
      res.status(200).send({
        data: get_user,
        status: 1,
        error: null,
        message: "Getting BankAccount Successfully",
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "error in getting bankAccount",
        status: 0,
        data: null,
      });
    }
  },

  async total_users_v2(req, res, next) {
    try {
      let users = await userModel.findOne({ _id: req.params.userId }).select({ referal_id: 1, refered_by: 1 }).lean();
      let L1 = await userModel.find({ refered_by: users.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean();
      let total = L1.length;
      let L2 = []
      let L3 = []
      L1.forEach(element => {
        L2.push(userModel.find({ refered_by: element.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
      });
      let l2 = await Promise.all(L2)
      let L2M = l2.filter(e => e.length);
      L2M.forEach(element => {

        element.forEach(data => {
          console.log('L2M', data)
          total += 1
          L3.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L4 = []
      let l3 = await Promise.all(L3)
      console.log('L3M', l3)
      let L3M = l3.filter(e => e.length);

      L3M.forEach(element => {
        element.forEach(data => {
          total += 1
          L4.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L5 = []
      let l4 = await Promise.all(L4)
      let L4M = l4.filter(e => e.length);
      L4M.forEach(element => {
        element.forEach(data => {
          total += 1
          L5.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L6 = []
      let l5 = await Promise.all(L5)
      let L5M = l5.filter(e => e.length);
      L5M.forEach(element => {
        element.forEach(data => {
          total += 1
          L6.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L7 = []
      let l6 = await Promise.all(L6)
      let L6M = l6.filter(e => e.length);
      L6M.forEach(element => {
        element.forEach(data => {
          total += 1
          L7.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L8 = []
      let l7 = await Promise.all(L7)
      let L7M = l7.filter(e => e.length);
      L7M.forEach(element => {
        element.forEach(data => {
          total += 1
          L8.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L9 = []
      let l8 = await Promise.all(L8)
      let L8M = l8.filter(e => e.length);
      L8M.forEach(element => {
        element.forEach(data => {
          total += 1
          L9.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L10 = []
      let l9 = await Promise.all(L9)
      let L9M = l9.filter(e => e.length);
      L9M.forEach(element => {
        element.forEach(data => {
          total += 1
          L10.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L11 = []
      let l10 = await Promise.all(L10)
      let L10M = l10.filter(e => e.length);
      L10M.forEach(element => {
        element.forEach(data => {
          total += 1
          L11.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L12 = []
      let l11 = await Promise.all(L11)
      let L11M = l11.filter(e => e.length);
      L11M.forEach(element => {
        element.forEach(data => {
          total += 1
          L12.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L13 = []
      let l12 = await Promise.all(L12)
      let L12M = l12.filter(e => e.length);
      L12M.forEach(element => {
        element.forEach(data => {
          total += 1
          L13.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L14 = []
      let l13 = await Promise.all(L13)
      let L13M = l13.filter(e => e.length);
      L13M.forEach(element => {
        element.forEach(data => {
          total += 1
          L14.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L15 = []
      let l14 = await Promise.all(L14)
      let L14M = l14.filter(e => e.length);
      L14M.forEach(element => {
        element.forEach(data => {
          total += 1
          L15.push(userModel.find({ refered_by: data.referal_id }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let output = {
        user_data_list: total,
      };


      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },
  async total_users_date(req, res, next) {
    try {

      var start = new Date();
      start.setHours(0, 0, 0, 0);
      var end = new Date();
      end.setHours(23, 59, 59, 999);
      if (req.params.type == 'week') {

        var first = start.getDate() - start.getDay(); // First day is the day of the month - the day of the week
        var last = first + 6; // last day is the first day + 6
        var start = new Date(start.setDate(first));
        start.setHours(0, 0, 0, 0);
        console.log(start, end, 'weel')
        var newd = new Date(start.setDate(first));
        var end = new Date(newd.setDate(last));
        end.setHours(23, 59, 59, 999);
        console.log(start, end, 'weel')
      }
      if (req.params.type == 'month') {
        var start = new Date();
        var firstDay = new Date(start.getFullYear(), start.getMonth(), 2);
        var lastDay = new Date(start.getFullYear(), start.getMonth() + 1, 0);
        var start = new Date(firstDay);
        start.setHours(0, 0, 0, 0);
        var end = new Date(lastDay);

        end.setHours(23, 59, 59, 999);


      }

      let users = await userModel.findOne({ _id: req.params.userId }).select({ referal_id: 1, refered_by: 1 }).lean();
      let L1 = await userModel.find({ refered_by: users.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean();
      let total = L1.length;
      let L2 = []
      let L3 = []
      L1.forEach(element => {
        L2.push(userModel.find({ refered_by: element.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
      });
      let l2 = await Promise.all(L2)
      let L2M = l2.filter(e => e.length);
      L2M.forEach(element => {
        element.forEach(data => {
          total += 1
          L3.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L4 = []
      let l3 = await Promise.all(L3)
      let L3M = l3.filter(e => e.length);
      L3M.forEach(element => {
        element.forEach(data => {
          total += 1
          L4.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L5 = []
      let l4 = await Promise.all(L4)
      let L4M = l4.filter(e => e.length);
      L4M.forEach(element => {
        element.forEach(data => {
          total += 1
          L5.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L6 = []
      let l5 = await Promise.all(L5)
      let L5M = l5.filter(e => e.length);
      L5M.forEach(element => {
        element.forEach(data => {
          total += 1
          L6.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L7 = []
      let l6 = await Promise.all(L6)
      let L6M = l6.filter(e => e.length);
      L6M.forEach(element => {
        element.forEach(data => {
          total += 1
          L7.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L8 = []
      let l7 = await Promise.all(L7)
      let L7M = l7.filter(e => e.length);
      L7M.forEach(element => {
        element.forEach(data => {
          total += 1
          L8.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L9 = []
      let l8 = await Promise.all(L8)
      let L8M = l8.filter(e => e.length);
      L8M.forEach(element => {
        element.forEach(data => {
          total += 1
          L9.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L10 = []
      let l9 = await Promise.all(L9)
      let L9M = l9.filter(e => e.length);
      L9M.forEach(element => {
        element.forEach(data => {
          total += 1
          L10.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L11 = []
      let l10 = await Promise.all(L10)
      let L10M = l10.filter(e => e.length);
      L10M.forEach(element => {
        element.forEach(data => {
          total += 1
          L11.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L12 = []
      let l11 = await Promise.all(L11)
      let L11M = l11.filter(e => e.length);
      L11M.forEach(element => {
        element.forEach(data => {
          total += 1
          L12.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L13 = []
      let l12 = await Promise.all(L12)
      let L12M = l12.filter(e => e.length);
      L12M.forEach(element => {
        element.forEach(data => {
          total += 1
          L13.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L14 = []
      let l13 = await Promise.all(L13)
      let L13M = l13.filter(e => e.length);
      L13M.forEach(element => {
        element.forEach(data => {
          total += 1
          L14.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L15 = []
      let l14 = await Promise.all(L14)
      let L14M = l14.filter(e => e.length);
      L14M.forEach(element => {
        element.forEach(data => {
          total += 1
          L15.push(userModel.find({ refered_by: data.referal_id, createdAt: { $gte: start, $lt: end } }).select({ referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let output = {
        user_data_list: total,
      };
      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },

  async total_users_all(req, res, next) {
    try {
      // const userToday = axios.get(
      //   `https://pearl.ggo.digital/api/v1/user/totalDownlineUsersDate/${req.params.userId}/day`
      // );
      // const userMonth = axios.get(
      //   `https://pearl.ggo.digital/api/v1/user/totalDownlineUsersDate/${req.params.userId}/week`
      // );
      // const userWeek = axios.get(
      //   `https://pearl.ggo.digital/api/v1/user/totalDownlineUsersDate/${req.params.userId}/month`
      // );
      const userTodayDeposit = axios.get(
        `https://pearl.ggo.digital/api/v1/user/totalDownlineDepositsDate/${req.params.userId}/day`
      );
      const userMonthDeposit = axios.get(
        `https://pearl.ggo.digital/api/v1/user/totalDownlineDepositsDate/${req.params.userId}/week`
      );
      const userWeekDeposit = axios.get(
        `https://pearl.ggo.digital/api/v1/user/totalDownlineDepositsDate/${req.params.userId}/month`
      );
      let [todayDepo, monthDepo, weekDepo] = await Promise.all([userTodayDeposit, userMonthDeposit, userWeekDeposit])
      let output = {
        today: todayDepo.data.data.totalUsers,
        month: monthDepo.data.data.totalUsers,
        week: weekDepo.data.data.totalUsers,
        todaydeposits: todayDepo.data.data.depositTotal,
        monthdeposits: monthDepo.data.data.depositTotal,
        weekdeposits: weekDepo.data.data.depositTotal
      }
      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },
  async over_all(req, res, next) {
    try {
      const user = axios.get(
        `https://pearl.ggo.digital/api/v1/user/totalDownlineUsers/${req.params.userId}`
      );
      const deposit = axios.get(
        `https://pearl.ggo.digital/api/v1/user/totalDownlineDeposits/${req.params.userId}`
      );

      let [userD, depositD] = await Promise.all([user, deposit])
      let output = {
        users: userD.data.data.user_data_list,
        deposits: depositD.data.data.depositTotal,
      }
      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },
  async total_users_depostis(req, res, next) {
    try {
      let users = await userModel.findOne({ _id: req.params.userId }).select({ referal_id: 1, refered_by: 1 }).lean();
      let L1 = await userModel.find({ refered_by: users.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean();
      let total = L1.length;
      let L1deposits = [];
      let L2 = []
      let L3 = []
      console.log('here')
      let depositTotal = 0;
      //to L1 refers and deposits start
      L1.forEach(element => {
        L1deposits.push(deposit_logModel.find({ userId: element._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
        L2.push(userModel.find({ refered_by: element.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
      });
      //to L1 refers and deposits end

      //l1 deposit start
      let L1depositsOut = await Promise.all(L1deposits);
      L1depositsOut = L1depositsOut.filter(e => e.length);
      L1depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l1 deposit end

      //l2 deposit start
      let l2 = await Promise.all(L2)
      let L2deposits = []
      let L2M = l2.filter(e => e.length);
      L2M.forEach(element => {
        element.forEach(data => {
          L2deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L3.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l2 deposit start
      let L2depositsOut = await Promise.all(L2deposits);
      L2depositsOut = L2depositsOut.filter(e => e.length);
      L2depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l2 deposit end



      let L4 = []
      let L3deposits = []
      let l3 = await Promise.all(L3)
      let L3M = l3.filter(e => e.length);
      L3M.forEach(element => {
        element.forEach(data => {
          L3deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L4.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L3depositsOut = await Promise.all(L3deposits);
      L3depositsOut = L3depositsOut.filter(e => e.length);
      L3depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end



      let L5 = []
      let l4 = await Promise.all(L4)
      let L4M = l4.filter(e => e.length);
      let L4deposits = []
      L4M.forEach(element => {
        element.forEach(data => {
          L4deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L5.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L4depositsOut = await Promise.all(L4deposits);
      L4depositsOut = L4depositsOut.filter(e => e.length);
      L4depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L6 = []
      let l5 = await Promise.all(L5)
      let L5M = l5.filter(e => e.length);
      let L5deposits = []
      L5M.forEach(element => {
        element.forEach(data => {
          L5deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L6.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L5depositsOut = await Promise.all(L5deposits);
      L5depositsOut = L5depositsOut.filter(e => e.length);
      L5depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L7 = []
      let l6 = await Promise.all(L6)
      let L6deposits = []
      let L6M = l6.filter(e => e.length);
      L6M.forEach(element => {
        element.forEach(data => {
          L6deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L7.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L6depositsOut = await Promise.all(L6deposits);
      L6depositsOut = L6depositsOut.filter(e => e.length);
      L6depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L8 = []
      let l7 = await Promise.all(L7)
      let L7M = l7.filter(e => e.length);
      let L7deposits = []
      L7M.forEach(element => {
        element.forEach(data => {
          L7deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L8.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L7depositsOut = await Promise.all(L7deposits);
      L7depositsOut = L7depositsOut.filter(e => e.length);
      L7depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L9 = []
      let l8 = await Promise.all(L8)
      let L8M = l8.filter(e => e.length);
      let L8deposits = []
      L8M.forEach(element => {
        element.forEach(data => {
          L8deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L9.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L8depositsOut = await Promise.all(L8deposits);
      L8depositsOut = L8depositsOut.filter(e => e.length);
      L8depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L10 = []
      let l9 = await Promise.all(L9)
      let L9M = l9.filter(e => e.length);
      let L9deposits = []
      L9M.forEach(element => {
        element.forEach(data => {
          L9deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L10.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L9depositsOut = await Promise.all(L9deposits);
      L9depositsOut = L9depositsOut.filter(e => e.length);
      L9depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L11 = []
      let l10 = await Promise.all(L10)
      let L10M = l10.filter(e => e.length);
      let L10deposits = []
      L10M.forEach(element => {
        element.forEach(data => {
          L10deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L11.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L10depositsOut = await Promise.all(L10deposits);
      L10depositsOut = L10depositsOut.filter(e => e.length);
      L10depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L12 = []
      let l11 = await Promise.all(L11)
      let L11M = l11.filter(e => e.length);
      let L11deposits = []
      L11M.forEach(element => {
        element.forEach(data => {
          L11deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L12.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L11depositsOut = await Promise.all(L11deposits);
      L11depositsOut = L11depositsOut.filter(e => e.length);
      L11depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L13 = []
      let l12 = await Promise.all(L12)
      let L12M = l12.filter(e => e.length);
      let L12deposits = []
      L12M.forEach(element => {
        element.forEach(data => {
          L12deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L13.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L12depositsOut = await Promise.all(L12deposits);
      L12depositsOut = L12depositsOut.filter(e => e.length);
      L12depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L14 = []
      let l13 = await Promise.all(L13)
      let L13M = l13.filter(e => e.length);
      let L13deposits = []
      L13M.forEach(element => {
        element.forEach(data => {
          L13deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L14.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L13depositsOut = await Promise.all(L13deposits);
      L13depositsOut = L13depositsOut.filter(e => e.length);
      L13depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L15 = []
      let l14 = await Promise.all(L14)
      let L14M = l14.filter(e => e.length);
      let L14deposits = []
      L14M.forEach(element => {
        element.forEach(data => {
          L14deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L15.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L14depositsOut = await Promise.all(L14deposits);
      L14depositsOut = L14depositsOut.filter(e => e.length);
      L14depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      // console.log('depositTotal', depositTotal)
      //l3 deposit end
      let l15 = await Promise.all(L15)
      let L15M = l15.filter(e => e.length);
      let L15Users = 0;
      let L15deposits = []
      L15M.forEach(element => {
        element.forEach(data => {
          L15Users += 1
          L15deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
        })
      });

      let L15depositsOut = await Promise.all(L15deposits);
      L15depositsOut = L15depositsOut.filter(e => e.length);
      let L15Deposit = 0;
      L15depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      });




      let output = {
        depositTotal: depositTotal,
      };


      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },
  async total_users_depostis_date(req, res, next) {
    try {
      let users = await userModel.findOne({ _id: req.params.userId }).select({ referal_id: 1, refered_by: 1 }).lean();
      let L1 = await userModel.find({ refered_by: users.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean();
      let total = L1.length;
      let L1deposits = [];
      let L2 = []
      let L3 = []
      let depositTotal = 0;
      let totalUsers = 0;
      var start = new Date();
      start.setHours(0, 0, 0, 0);
      var end = new Date();
      end.setHours(23, 59, 59, 999);
      if (req.params.type == 'week') {

        var first = start.getDate() - start.getDay(); // First day is the day of the month - the day of the week
        var last = first + 6; // last day is the first day + 6
        var start = new Date(start.setDate(first));
        start.setHours(0, 0, 0, 0);
        console.log(start, end, 'weel')
        var newd = new Date(start.setDate(first));
        var end = new Date(newd.setDate(last));
        end.setHours(23, 59, 59, 999);
        console.log(start, end, 'weel')
      }
      if (req.params.type == 'month') {
        var start = new Date();
        var firstDay = new Date(start.getFullYear(), start.getMonth(), 2);
        var lastDay = new Date(start.getFullYear(), start.getMonth() + 1, 0);
        var start = new Date(firstDay);
        start.setHours(0, 0, 0, 0);
        var end = new Date(lastDay);
        end.setHours(23, 59, 59, 999);
      }
      //to L1 refers and deposits start
      L1.forEach(element => {
        L1deposits.push(deposit_logModel.find({ userId: element._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
        L2.push(userModel.find({ refered_by: element.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
      });
      //to L1 refers and deposits end

      //l1 deposit start
      let L1depositsOut = await Promise.all(L1deposits);
      L1depositsOut = L1depositsOut.filter(e => e.length);
      totalUsers += L1depositsOut.length;
      L1depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l1 deposit end

      //l2 deposit start
      let l2 = await Promise.all(L2)
      let L2deposits = []
      let L2M = l2.filter(e => e.length);
      L2M.forEach(element => {
        element.forEach(data => {
          L2deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L3.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l2 deposit start

      let L2depositsOut = await Promise.all(L2deposits);
      L2depositsOut = L2depositsOut.filter(e => e.length);
      totalUsers += L2depositsOut.length;
      L2depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l2 deposit end



      let L4 = []
      let L3deposits = []
      let l3 = await Promise.all(L3)
      let L3M = l3.filter(e => e.length);
      L3M.forEach(element => {
        element.forEach(data => {
          L3deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L4.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start

      let L3depositsOut = await Promise.all(L3deposits);
      L3depositsOut = L3depositsOut.filter(e => e.length);
      totalUsers += L3depositsOut.length;
      L3depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end



      let L5 = []
      let l4 = await Promise.all(L4)
      let L4M = l4.filter(e => e.length);
      let L4deposits = []
      L4M.forEach(element => {
        element.forEach(data => {
          L4deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L5.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L4depositsOut = await Promise.all(L4deposits);
      L4depositsOut = L4depositsOut.filter(e => e.length);
      totalUsers += L4depositsOut.length;
      L4depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L6 = []
      let l5 = await Promise.all(L5)
      let L5M = l5.filter(e => e.length);
      let L5deposits = []
      L5M.forEach(element => {
        element.forEach(data => {
          L5deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L6.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L5depositsOut = await Promise.all(L5deposits);
      L5depositsOut = L5depositsOut.filter(e => e.length);
      totalUsers += L5depositsOut.length;
      L5depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L7 = []
      let l6 = await Promise.all(L6)
      let L6deposits = []
      let L6M = l6.filter(e => e.length);
      L6M.forEach(element => {
        element.forEach(data => {
          L6deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L7.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L6depositsOut = await Promise.all(L6deposits);
      L6depositsOut = L6depositsOut.filter(e => e.length);
      totalUsers += L6depositsOut.length;
      L6depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L8 = []
      let l7 = await Promise.all(L7)
      let L7M = l7.filter(e => e.length);
      let L7deposits = []
      L7M.forEach(element => {
        element.forEach(data => {
          L7deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L8.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L7depositsOut = await Promise.all(L7deposits);
      L7depositsOut = L7depositsOut.filter(e => e.length);
      totalUsers += L7depositsOut.length;
      L7depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L9 = []
      let l8 = await Promise.all(L8)
      let L8M = l8.filter(e => e.length);
      let L8deposits = []
      L8M.forEach(element => {
        element.forEach(data => {
          L8deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L9.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L8depositsOut = await Promise.all(L8deposits);
      L8depositsOut = L8depositsOut.filter(e => e.length);
      totalUsers += L8depositsOut.length;
      L8depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L10 = []
      let l9 = await Promise.all(L9)
      let L9M = l9.filter(e => e.length);
      let L9deposits = []
      L9M.forEach(element => {
        element.forEach(data => {
          L9deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L10.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L9depositsOut = await Promise.all(L9deposits);
      L9depositsOut = L9depositsOut.filter(e => e.length);
      totalUsers += L9depositsOut.length;
      L9depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L11 = []
      let l10 = await Promise.all(L10)
      let L10M = l10.filter(e => e.length);
      let L10deposits = []
      L10M.forEach(element => {
        element.forEach(data => {
          L10deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L11.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L10depositsOut = await Promise.all(L10deposits);
      L10depositsOut = L10depositsOut.filter(e => e.length);
      totalUsers += L10depositsOut.length;
      L10depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end


      let L12 = []
      let l11 = await Promise.all(L11)
      let L11M = l11.filter(e => e.length);

      let L11deposits = []
      L11M.forEach(element => {
        element.forEach(data => {
          L11deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L12.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L11depositsOut = await Promise.all(L11deposits);
      L11depositsOut = L11depositsOut.filter(e => e.length);
      totalUsers += L11depositsOut.length;
      L11depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L13 = []
      let l12 = await Promise.all(L12)
      let L12M = l12.filter(e => e.length);
      let L12deposits = []
      L12M.forEach(element => {
        element.forEach(data => {
          L12deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L13.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L12depositsOut = await Promise.all(L12deposits);
      L12depositsOut = L12depositsOut.filter(e => e.length);
      totalUsers += L12depositsOut.length;
      L12depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L14 = []
      let l13 = await Promise.all(L13)
      let L13M = l13.filter(e => e.length);
      let L13deposits = []
      L13M.forEach(element => {
        element.forEach(data => {
          L13deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L14.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L13depositsOut = await Promise.all(L13deposits);
      L13depositsOut = L13depositsOut.filter(e => e.length);
      totalUsers += L13depositsOut.length;
      L13depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      console.log('depositTotal', depositTotal)
      //l3 deposit end

      let L15 = []
      let l14 = await Promise.all(L14)
      let L14M = l14.filter(e => e.length);
      let L14deposits = []
      L14M.forEach(element => {
        element.forEach(data => {
          L14deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }], createdAt: { $gte: start, $lt: end } }).select({ amount: 1 }).lean())
          L15.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L14depositsOut = await Promise.all(L14deposits);
      L14depositsOut = L14depositsOut.filter(e => e.length);
      totalUsers += L14depositsOut.length;
      L14depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })
      // console.log('depositTotal', depositTotal)
      //l3 deposit end
      //l3 deposit start
      let l15 = await Promise.all(L15)
      let L15M = l15.filter(e => e.length);
      let L15Users = 0;
      let L15deposits = []
      L15M.forEach(element => {
        element.forEach(data => {
          L15Users += 1
          L15deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
        })
      });

      let L15depositsOut = await Promise.all(L15deposits);
      L15depositsOut = L15depositsOut.filter(e => e.length);
      totalUsers += L15depositsOut.length;
      let L15Deposit = 0;
      L15depositsOut.forEach(element => {
        element.forEach(data => {
          depositTotal += data.amount
        })
      })


      let output = {
        depositTotal: depositTotal,
        totalUsers: totalUsers,
      };


      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },

  async total_users_Level(req, res, next) {
    try {
      let users = await userModel.findOne({ _id: req.params.userId }).select({ referal_id: 1, refered_by: 1 }).lean();
      let L1 = await userModel.find({ refered_by: users.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean();
      let total = L1.length;
      let L1deposits = [];
      let L2 = []
      let L3 = []
      let depositTotal = 0;
      let L1Users = 0;
      //to L1 refers and deposits start
      L1.forEach(element => {
        L1Users += 1;
        L1deposits.push(deposit_logModel.find({ userId: element._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
        L2.push(userModel.find({ refered_by: element.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
      });

      //to L1 refers and deposits end

      //l1 deposit start
      let L1depositsOut = await Promise.all(L1deposits);
      L1depositsOut = L1depositsOut.filter(e => e.length);
      let L1Deposit = 0;
      L1depositsOut.forEach(element => {
        element.forEach(data => {
          L1Deposit += data.amount
        })
      })
      //l1 deposit end

      //l2 deposit start
      let l2 = await Promise.all(L2)
      let L2deposits = [];
      let L2Users = 0;
      let L2M = l2.filter(e => e.length);
      L2M.forEach(element => {
        element.forEach(data => {
          L2Users += 1
          L2deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L3.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l2 deposit start
      let L2depositsOut = await Promise.all(L2deposits);
      console.log('L2depositsOut', L2depositsOut)
      L2depositsOut = L2depositsOut.filter(e => e.length);
      let L2Deposit = 0;
      L2depositsOut.forEach(element => {
        element.forEach(data => {
          L2Deposit += data.amount
        })
      })

      //l2 deposit end



      let L4 = []
      let L3deposits = []
      let l3 = await Promise.all(L3)
      let L3M = l3.filter(e => e.length);
      let L3Users = 0;
      L3M.forEach(element => {
        element.forEach(data => {
          L3Users += 1
          L3deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L4.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L3Deposit = 0;
      let L3depositsOut = await Promise.all(L3deposits);
      L3depositsOut = L3depositsOut.filter(e => e.length);
      L3depositsOut.forEach(element => {
        element.forEach(data => {
          L3Deposit += data.amount
        })
      })
      //l3 deposit end



      let L5 = []
      let l4 = await Promise.all(L4)
      let L4M = l4.filter(e => e.length);
      let L4deposits = []
      let L4Users = 0;
      L4M.forEach(element => {
        element.forEach(data => {
          L4Users += 1
          L4deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L5.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L4depositsOut = await Promise.all(L4deposits);
      L4depositsOut = L4depositsOut.filter(e => e.length);
      let L4Deposit = 0;
      L4depositsOut.forEach(element => {
        element.forEach(data => {
          L4Deposit += data.amount
        })
      })
      //l3 deposit end


      let L6 = []
      let l5 = await Promise.all(L5)
      let L5M = l5.filter(e => e.length);
      let L5deposits = []
      let L5Users = 0;
      L5M.forEach(element => {
        element.forEach(data => {
          L5Users += 1
          L5deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L6.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L5depositsOut = await Promise.all(L5deposits);
      L5depositsOut = L5depositsOut.filter(e => e.length);
      let L5Deposit = 0;
      L5depositsOut.forEach(element => {
        element.forEach(data => {
          L5Deposit += data.amount
        })
      })
      //l3 deposit end

      let L7 = []
      let l6 = await Promise.all(L6)
      let L6deposits = []
      let L6M = l6.filter(e => e.length);
      let L6Users = 0;
      L6M.forEach(element => {
        element.forEach(data => {
          L6Users += 1
          L6deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L7.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L6depositsOut = await Promise.all(L6deposits);
      L6depositsOut = L6depositsOut.filter(e => e.length);
      let L6Deposit = 0;
      L6depositsOut.forEach(element => {
        element.forEach(data => {
          L6Deposit += data.amount
        })
      })
      //l3 deposit end


      let L8 = []
      let l7 = await Promise.all(L7)
      let L7M = l7.filter(e => e.length);
      let L7deposits = []
      let L7Users = 0;
      L7M.forEach(element => {
        element.forEach(data => {
          L7Users += 1
          L7deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L8.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L7depositsOut = await Promise.all(L7deposits);
      L7depositsOut = L7depositsOut.filter(e => e.length);
      let L7Deposit = 0;
      L7depositsOut.forEach(element => {
        element.forEach(data => {
          L7Deposit += data.amount
        })
      })
      //l3 deposit end


      let L9 = []
      let l8 = await Promise.all(L8)
      let L8M = l8.filter(e => e.length);
      let L8deposits = []
      let L8Users = 0;
      L8M.forEach(element => {
        element.forEach(data => {
          L8Users += 1
          L8deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L9.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L8depositsOut = await Promise.all(L8deposits);
      L8depositsOut = L8depositsOut.filter(e => e.length);
      let L8Deposit = 0;
      L8depositsOut.forEach(element => {
        element.forEach(data => {
          L8Deposit += data.amount
        })
      })
      //l3 deposit end

      let L10 = []
      let l9 = await Promise.all(L9)
      let L9M = l9.filter(e => e.length);
      let L9deposits = []
      let L9Users = 0;
      L9M.forEach(element => {
        element.forEach(data => {
          L9Users += 1
          L9deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L10.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L9depositsOut = await Promise.all(L9deposits);
      let L9Deposit = 0;
      L9depositsOut = L9depositsOut.filter(e => e.length);
      L9depositsOut.forEach(element => {
        element.forEach(data => {
          L9Deposit += data.amount
        })
      })
      //l3 deposit end

      let L11 = []
      let l10 = await Promise.all(L10)
      let L10M = l10.filter(e => e.length);
      let L10deposits = []
      let L10Users = 0;
      L10M.forEach(element => {
        element.forEach(data => {
          L10Users += 1
          L10deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L11.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L10depositsOut = await Promise.all(L10deposits);
      let L10Deposit = 0;
      L10depositsOut = L10depositsOut.filter(e => e.length);
      L10depositsOut.forEach(element => {
        element.forEach(data => {
          L10Deposit += data.amount
        })
      })
      //l3 deposit end


      let L12 = []
      let l11 = await Promise.all(L11)
      let L11M = l11.filter(e => e.length);
      let L11deposits = []
      let L11Users = 0;
      L11M.forEach(element => {
        element.forEach(data => {
          L11Users += 1
          L11deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L12.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L11depositsOut = await Promise.all(L11deposits);
      L11depositsOut = L11depositsOut.filter(e => e.length);
      let L11Deposit = 0;
      L11depositsOut.forEach(element => {
        element.forEach(data => {
          L11Deposit += data.amount
        })
      })
      //l3 deposit end

      let L13 = []
      let l12 = await Promise.all(L12)
      let L12M = l12.filter(e => e.length);
      let L12deposits = []
      let L12Users = 0;
      L12M.forEach(element => {
        element.forEach(data => {
          L12Users += 1;
          L12deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L13.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });
      //l3 deposit start
      let L12depositsOut = await Promise.all(L12deposits);
      L12depositsOut = L12depositsOut.filter(e => e.length);
      let L12Deposit = 0;
      L12depositsOut.forEach(element => {
        element.forEach(data => {
          L12Deposit += data.amount
        })
      })

      //l3 deposit end

      let L14 = []
      let l13 = await Promise.all(L13)
      let L13M = l13.filter(e => e.length);
      let L13deposits = []
      let L13Users = 0;
      L13M.forEach(element => {
        element.forEach(data => {
          L13Users += 1
          L13deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L14.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      //l3 deposit start
      let L13depositsOut = await Promise.all(L13deposits);
      L13depositsOut = L13depositsOut.filter(e => e.length);
      let L13Deposit = 0;
      L13depositsOut.forEach(element => {
        element.forEach(data => {
          L13Deposit += data.amount
        })
      })

      //l3 deposit end

      let L15 = []
      let l14 = await Promise.all(L14)
      let L14M = l14.filter(e => e.length);
      let L14deposits = []
      let L14Users = 0;
      L14M.forEach(element => {
        element.forEach(data => {
          L14Users += 1
          L14deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
          L15.push(userModel.find({ refered_by: data.referal_id }).select({ _id: 1, referal_id: 1, refered_by: 1 }).lean());
        })
      });

      let L14depositsOut = await Promise.all(L14deposits);
      L14depositsOut = L14depositsOut.filter(e => e.length);
      let L14Deposit = 0;
      L14depositsOut.forEach(element => {
        element.forEach(data => {
          L14Deposit += data.amount
        })
      })
      //l3 deposit start
      let l15 = await Promise.all(L15)
      let L15M = l15.filter(e => e.length);
      let L15Users = 0;
      let L15deposits = []
      L15M.forEach(element => {
        element.forEach(data => {
          L15Users += 1
          L15deposits.push(deposit_logModel.find({ userId: data._id, status: 'Success', $or: [{ "paymentType": "GGO-ADMIN" }, { "paymentType": "GGO-wallet" }, { "paymentType": "Reinvest" }] }).select({ amount: 1 }).lean())
        })
      });

      let L15depositsOut = await Promise.all(L15deposits);
      L15depositsOut = L15depositsOut.filter(e => e.length);
      let L15Deposit = 0;
      L15depositsOut.forEach(element => {
        element.forEach(data => {
          L15Deposit += data.amount
        })
      })

      let output =
        [
          {
            deposit: L1Deposit,
            users: L1Users,
          },
          {
            deposit: L2Deposit,
            users: L2Users
          },
          {
            deposit: L3Deposit,
            users: L3Users
          },
          {
            deposit: L4Deposit,
            users: L4Users
          },
          {
            deposit: L5Deposit,
            users: L5Users
          },
          {
            deposit: L6Deposit,
            users: L6Users
          },
          {
            deposit: L7Deposit,
            users: L7Users
          },
          {
            deposit: L8Deposit,
            users: L8Users
          },
          {
            users: L9Users,
            deposit: L9Deposit
          },
          {
            users: L10Users,
            deposit: L10Deposit
          },
          {
            users: L11Users,
            deposit: L11Deposit
          },
          {
            users: L12Users,
            deposit: L12Deposit
          },
          {
            users: L13Users,
            deposit: L13Deposit
          },
          {
            users: L14Users,
            deposit: L14Deposit
          },
          {
            users: L15Users,
            deposit: L15Deposit
          }
        ]

      res.status(200).send({
        data: output,
        status: 1,
        error: null,
      });
    } catch (error) {
      res.status(400).send({
        error: error,
        message: "Error in referral tree 2.0",
        status: 0,
      });
    }
  },

};
